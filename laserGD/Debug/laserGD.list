
laserGD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000018f4  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08001a00  08001a00  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08001a00  08001a00  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08001a00  08001a00  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001a00  08001a00  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001a00  08001a00  00011a00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001a04  08001a04  00011a04  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08001a08  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000004  08001a0c  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000003c  08001a0c  0002003c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00004683  00000000  00000000  0002002d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000010df  00000000  00000000  000246b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000578  00000000  00000000  00025790  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000004e0  00000000  00000000  00025d08  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0001211c  00000000  00000000  000261e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00003ca7  00000000  00000000  00038304  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0005e497  00000000  00000000  0003bfab  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0009a442  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001564  00000000  00000000  0009a4c0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000004 	.word	0x20000004
 8000128:	00000000 	.word	0x00000000
 800012c:	080019e8 	.word	0x080019e8

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000008 	.word	0x20000008
 8000148:	080019e8 	.word	0x080019e8

0800014c <__NVIC_GetPriorityGrouping>:
 800014c:	b480      	push	{r7}
 800014e:	af00      	add	r7, sp, #0
 8000150:	4b04      	ldr	r3, [pc, #16]	; (8000164 <__NVIC_GetPriorityGrouping+0x18>)
 8000152:	68db      	ldr	r3, [r3, #12]
 8000154:	0a1b      	lsrs	r3, r3, #8
 8000156:	f003 0307 	and.w	r3, r3, #7
 800015a:	4618      	mov	r0, r3
 800015c:	46bd      	mov	sp, r7
 800015e:	bc80      	pop	{r7}
 8000160:	4770      	bx	lr
 8000162:	bf00      	nop
 8000164:	e000ed00 	.word	0xe000ed00

08000168 <__NVIC_EnableIRQ>:
 8000168:	b480      	push	{r7}
 800016a:	b083      	sub	sp, #12
 800016c:	af00      	add	r7, sp, #0
 800016e:	4603      	mov	r3, r0
 8000170:	71fb      	strb	r3, [r7, #7]
 8000172:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000176:	2b00      	cmp	r3, #0
 8000178:	db0b      	blt.n	8000192 <__NVIC_EnableIRQ+0x2a>
 800017a:	79fb      	ldrb	r3, [r7, #7]
 800017c:	f003 021f 	and.w	r2, r3, #31
 8000180:	4906      	ldr	r1, [pc, #24]	; (800019c <__NVIC_EnableIRQ+0x34>)
 8000182:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000186:	095b      	lsrs	r3, r3, #5
 8000188:	2001      	movs	r0, #1
 800018a:	fa00 f202 	lsl.w	r2, r0, r2
 800018e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000192:	bf00      	nop
 8000194:	370c      	adds	r7, #12
 8000196:	46bd      	mov	sp, r7
 8000198:	bc80      	pop	{r7}
 800019a:	4770      	bx	lr
 800019c:	e000e100 	.word	0xe000e100

080001a0 <__NVIC_SetPriority>:
 80001a0:	b480      	push	{r7}
 80001a2:	b083      	sub	sp, #12
 80001a4:	af00      	add	r7, sp, #0
 80001a6:	4603      	mov	r3, r0
 80001a8:	6039      	str	r1, [r7, #0]
 80001aa:	71fb      	strb	r3, [r7, #7]
 80001ac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001b0:	2b00      	cmp	r3, #0
 80001b2:	db0a      	blt.n	80001ca <__NVIC_SetPriority+0x2a>
 80001b4:	683b      	ldr	r3, [r7, #0]
 80001b6:	b2da      	uxtb	r2, r3
 80001b8:	490c      	ldr	r1, [pc, #48]	; (80001ec <__NVIC_SetPriority+0x4c>)
 80001ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001be:	0112      	lsls	r2, r2, #4
 80001c0:	b2d2      	uxtb	r2, r2
 80001c2:	440b      	add	r3, r1
 80001c4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80001c8:	e00a      	b.n	80001e0 <__NVIC_SetPriority+0x40>
 80001ca:	683b      	ldr	r3, [r7, #0]
 80001cc:	b2da      	uxtb	r2, r3
 80001ce:	4908      	ldr	r1, [pc, #32]	; (80001f0 <__NVIC_SetPriority+0x50>)
 80001d0:	79fb      	ldrb	r3, [r7, #7]
 80001d2:	f003 030f 	and.w	r3, r3, #15
 80001d6:	3b04      	subs	r3, #4
 80001d8:	0112      	lsls	r2, r2, #4
 80001da:	b2d2      	uxtb	r2, r2
 80001dc:	440b      	add	r3, r1
 80001de:	761a      	strb	r2, [r3, #24]
 80001e0:	bf00      	nop
 80001e2:	370c      	adds	r7, #12
 80001e4:	46bd      	mov	sp, r7
 80001e6:	bc80      	pop	{r7}
 80001e8:	4770      	bx	lr
 80001ea:	bf00      	nop
 80001ec:	e000e100 	.word	0xe000e100
 80001f0:	e000ed00 	.word	0xe000ed00

080001f4 <NVIC_EncodePriority>:
 80001f4:	b480      	push	{r7}
 80001f6:	b089      	sub	sp, #36	; 0x24
 80001f8:	af00      	add	r7, sp, #0
 80001fa:	60f8      	str	r0, [r7, #12]
 80001fc:	60b9      	str	r1, [r7, #8]
 80001fe:	607a      	str	r2, [r7, #4]
 8000200:	68fb      	ldr	r3, [r7, #12]
 8000202:	f003 0307 	and.w	r3, r3, #7
 8000206:	61fb      	str	r3, [r7, #28]
 8000208:	69fb      	ldr	r3, [r7, #28]
 800020a:	f1c3 0307 	rsb	r3, r3, #7
 800020e:	2b04      	cmp	r3, #4
 8000210:	bf28      	it	cs
 8000212:	2304      	movcs	r3, #4
 8000214:	61bb      	str	r3, [r7, #24]
 8000216:	69fb      	ldr	r3, [r7, #28]
 8000218:	3304      	adds	r3, #4
 800021a:	2b06      	cmp	r3, #6
 800021c:	d902      	bls.n	8000224 <NVIC_EncodePriority+0x30>
 800021e:	69fb      	ldr	r3, [r7, #28]
 8000220:	3b03      	subs	r3, #3
 8000222:	e000      	b.n	8000226 <NVIC_EncodePriority+0x32>
 8000224:	2300      	movs	r3, #0
 8000226:	617b      	str	r3, [r7, #20]
 8000228:	f04f 32ff 	mov.w	r2, #4294967295
 800022c:	69bb      	ldr	r3, [r7, #24]
 800022e:	fa02 f303 	lsl.w	r3, r2, r3
 8000232:	43da      	mvns	r2, r3
 8000234:	68bb      	ldr	r3, [r7, #8]
 8000236:	401a      	ands	r2, r3
 8000238:	697b      	ldr	r3, [r7, #20]
 800023a:	409a      	lsls	r2, r3
 800023c:	f04f 31ff 	mov.w	r1, #4294967295
 8000240:	697b      	ldr	r3, [r7, #20]
 8000242:	fa01 f303 	lsl.w	r3, r1, r3
 8000246:	43d9      	mvns	r1, r3
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	400b      	ands	r3, r1
 800024c:	4313      	orrs	r3, r2
 800024e:	4618      	mov	r0, r3
 8000250:	3724      	adds	r7, #36	; 0x24
 8000252:	46bd      	mov	sp, r7
 8000254:	bc80      	pop	{r7}
 8000256:	4770      	bx	lr

08000258 <LL_APB2_GRP1_EnableClock>:
 8000258:	b480      	push	{r7}
 800025a:	b085      	sub	sp, #20
 800025c:	af00      	add	r7, sp, #0
 800025e:	6078      	str	r0, [r7, #4]
 8000260:	4b08      	ldr	r3, [pc, #32]	; (8000284 <LL_APB2_GRP1_EnableClock+0x2c>)
 8000262:	699a      	ldr	r2, [r3, #24]
 8000264:	4907      	ldr	r1, [pc, #28]	; (8000284 <LL_APB2_GRP1_EnableClock+0x2c>)
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	4313      	orrs	r3, r2
 800026a:	618b      	str	r3, [r1, #24]
 800026c:	4b05      	ldr	r3, [pc, #20]	; (8000284 <LL_APB2_GRP1_EnableClock+0x2c>)
 800026e:	699a      	ldr	r2, [r3, #24]
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	4013      	ands	r3, r2
 8000274:	60fb      	str	r3, [r7, #12]
 8000276:	68fb      	ldr	r3, [r7, #12]
 8000278:	bf00      	nop
 800027a:	3714      	adds	r7, #20
 800027c:	46bd      	mov	sp, r7
 800027e:	bc80      	pop	{r7}
 8000280:	4770      	bx	lr
 8000282:	bf00      	nop
 8000284:	40021000 	.word	0x40021000

08000288 <LL_GPIO_SetPinMode>:
 8000288:	b490      	push	{r4, r7}
 800028a:	b088      	sub	sp, #32
 800028c:	af00      	add	r7, sp, #0
 800028e:	60f8      	str	r0, [r7, #12]
 8000290:	60b9      	str	r1, [r7, #8]
 8000292:	607a      	str	r2, [r7, #4]
 8000294:	68fb      	ldr	r3, [r7, #12]
 8000296:	461a      	mov	r2, r3
 8000298:	68bb      	ldr	r3, [r7, #8]
 800029a:	0e1b      	lsrs	r3, r3, #24
 800029c:	4413      	add	r3, r2
 800029e:	461c      	mov	r4, r3
 80002a0:	6822      	ldr	r2, [r4, #0]
 80002a2:	68bb      	ldr	r3, [r7, #8]
 80002a4:	617b      	str	r3, [r7, #20]
 80002a6:	697b      	ldr	r3, [r7, #20]
 80002a8:	fa93 f3a3 	rbit	r3, r3
 80002ac:	613b      	str	r3, [r7, #16]
 80002ae:	693b      	ldr	r3, [r7, #16]
 80002b0:	fab3 f383 	clz	r3, r3
 80002b4:	b2db      	uxtb	r3, r3
 80002b6:	009b      	lsls	r3, r3, #2
 80002b8:	210f      	movs	r1, #15
 80002ba:	fa01 f303 	lsl.w	r3, r1, r3
 80002be:	43db      	mvns	r3, r3
 80002c0:	401a      	ands	r2, r3
 80002c2:	68bb      	ldr	r3, [r7, #8]
 80002c4:	61fb      	str	r3, [r7, #28]
 80002c6:	69fb      	ldr	r3, [r7, #28]
 80002c8:	fa93 f3a3 	rbit	r3, r3
 80002cc:	61bb      	str	r3, [r7, #24]
 80002ce:	69bb      	ldr	r3, [r7, #24]
 80002d0:	fab3 f383 	clz	r3, r3
 80002d4:	b2db      	uxtb	r3, r3
 80002d6:	009b      	lsls	r3, r3, #2
 80002d8:	6879      	ldr	r1, [r7, #4]
 80002da:	fa01 f303 	lsl.w	r3, r1, r3
 80002de:	4313      	orrs	r3, r2
 80002e0:	6023      	str	r3, [r4, #0]
 80002e2:	bf00      	nop
 80002e4:	3720      	adds	r7, #32
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bc90      	pop	{r4, r7}
 80002ea:	4770      	bx	lr

080002ec <LL_GPIO_ResetOutputPin>:
 80002ec:	b480      	push	{r7}
 80002ee:	b083      	sub	sp, #12
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
 80002f4:	6039      	str	r1, [r7, #0]
 80002f6:	683b      	ldr	r3, [r7, #0]
 80002f8:	0a1b      	lsrs	r3, r3, #8
 80002fa:	b29a      	uxth	r2, r3
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	615a      	str	r2, [r3, #20]
 8000300:	bf00      	nop
 8000302:	370c      	adds	r7, #12
 8000304:	46bd      	mov	sp, r7
 8000306:	bc80      	pop	{r7}
 8000308:	4770      	bx	lr
	...

0800030c <LL_GPIO_AF_SetEXTISource>:
 800030c:	b480      	push	{r7}
 800030e:	b085      	sub	sp, #20
 8000310:	af00      	add	r7, sp, #0
 8000312:	6078      	str	r0, [r7, #4]
 8000314:	6039      	str	r1, [r7, #0]
 8000316:	4a13      	ldr	r2, [pc, #76]	; (8000364 <LL_GPIO_AF_SetEXTISource+0x58>)
 8000318:	683b      	ldr	r3, [r7, #0]
 800031a:	b2db      	uxtb	r3, r3
 800031c:	3302      	adds	r3, #2
 800031e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000322:	683b      	ldr	r3, [r7, #0]
 8000324:	0c1b      	lsrs	r3, r3, #16
 8000326:	43db      	mvns	r3, r3
 8000328:	ea02 0103 	and.w	r1, r2, r3
 800032c:	683b      	ldr	r3, [r7, #0]
 800032e:	0c1b      	lsrs	r3, r3, #16
 8000330:	60fb      	str	r3, [r7, #12]
 8000332:	68fb      	ldr	r3, [r7, #12]
 8000334:	fa93 f3a3 	rbit	r3, r3
 8000338:	60bb      	str	r3, [r7, #8]
 800033a:	68bb      	ldr	r3, [r7, #8]
 800033c:	fab3 f383 	clz	r3, r3
 8000340:	b2db      	uxtb	r3, r3
 8000342:	461a      	mov	r2, r3
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	fa03 f202 	lsl.w	r2, r3, r2
 800034a:	4806      	ldr	r0, [pc, #24]	; (8000364 <LL_GPIO_AF_SetEXTISource+0x58>)
 800034c:	683b      	ldr	r3, [r7, #0]
 800034e:	b2db      	uxtb	r3, r3
 8000350:	430a      	orrs	r2, r1
 8000352:	3302      	adds	r3, #2
 8000354:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8000358:	bf00      	nop
 800035a:	3714      	adds	r7, #20
 800035c:	46bd      	mov	sp, r7
 800035e:	bc80      	pop	{r7}
 8000360:	4770      	bx	lr
 8000362:	bf00      	nop
 8000364:	40010000 	.word	0x40010000

08000368 <MX_GPIO_Init>:
 8000368:	b580      	push	{r7, lr}
 800036a:	b088      	sub	sp, #32
 800036c:	af00      	add	r7, sp, #0
 800036e:	f107 0318 	add.w	r3, r7, #24
 8000372:	2200      	movs	r2, #0
 8000374:	601a      	str	r2, [r3, #0]
 8000376:	605a      	str	r2, [r3, #4]
 8000378:	1d3b      	adds	r3, r7, #4
 800037a:	2200      	movs	r2, #0
 800037c:	601a      	str	r2, [r3, #0]
 800037e:	605a      	str	r2, [r3, #4]
 8000380:	609a      	str	r2, [r3, #8]
 8000382:	60da      	str	r2, [r3, #12]
 8000384:	611a      	str	r2, [r3, #16]
 8000386:	2004      	movs	r0, #4
 8000388:	f7ff ff66 	bl	8000258 <LL_APB2_GRP1_EnableClock>
 800038c:	2008      	movs	r0, #8
 800038e:	f7ff ff63 	bl	8000258 <LL_APB2_GRP1_EnableClock>
 8000392:	492b      	ldr	r1, [pc, #172]	; (8000440 <MX_GPIO_Init+0xd8>)
 8000394:	482b      	ldr	r0, [pc, #172]	; (8000444 <MX_GPIO_Init+0xdc>)
 8000396:	f7ff ffa9 	bl	80002ec <LL_GPIO_ResetOutputPin>
 800039a:	492b      	ldr	r1, [pc, #172]	; (8000448 <MX_GPIO_Init+0xe0>)
 800039c:	482b      	ldr	r0, [pc, #172]	; (800044c <MX_GPIO_Init+0xe4>)
 800039e:	f7ff ffa5 	bl	80002ec <LL_GPIO_ResetOutputPin>
 80003a2:	4b27      	ldr	r3, [pc, #156]	; (8000440 <MX_GPIO_Init+0xd8>)
 80003a4:	607b      	str	r3, [r7, #4]
 80003a6:	2301      	movs	r3, #1
 80003a8:	60bb      	str	r3, [r7, #8]
 80003aa:	2303      	movs	r3, #3
 80003ac:	60fb      	str	r3, [r7, #12]
 80003ae:	2300      	movs	r3, #0
 80003b0:	613b      	str	r3, [r7, #16]
 80003b2:	1d3b      	adds	r3, r7, #4
 80003b4:	4619      	mov	r1, r3
 80003b6:	4823      	ldr	r0, [pc, #140]	; (8000444 <MX_GPIO_Init+0xdc>)
 80003b8:	f001 f9a2 	bl	8001700 <LL_GPIO_Init>
 80003bc:	4b22      	ldr	r3, [pc, #136]	; (8000448 <MX_GPIO_Init+0xe0>)
 80003be:	607b      	str	r3, [r7, #4]
 80003c0:	2301      	movs	r3, #1
 80003c2:	60bb      	str	r3, [r7, #8]
 80003c4:	2303      	movs	r3, #3
 80003c6:	60fb      	str	r3, [r7, #12]
 80003c8:	2300      	movs	r3, #0
 80003ca:	613b      	str	r3, [r7, #16]
 80003cc:	1d3b      	adds	r3, r7, #4
 80003ce:	4619      	mov	r1, r3
 80003d0:	481e      	ldr	r0, [pc, #120]	; (800044c <MX_GPIO_Init+0xe4>)
 80003d2:	f001 f995 	bl	8001700 <LL_GPIO_Init>
 80003d6:	4b1e      	ldr	r3, [pc, #120]	; (8000450 <MX_GPIO_Init+0xe8>)
 80003d8:	607b      	str	r3, [r7, #4]
 80003da:	2304      	movs	r3, #4
 80003dc:	60bb      	str	r3, [r7, #8]
 80003de:	1d3b      	adds	r3, r7, #4
 80003e0:	4619      	mov	r1, r3
 80003e2:	481a      	ldr	r0, [pc, #104]	; (800044c <MX_GPIO_Init+0xe4>)
 80003e4:	f001 f98c 	bl	8001700 <LL_GPIO_Init>
 80003e8:	491a      	ldr	r1, [pc, #104]	; (8000454 <MX_GPIO_Init+0xec>)
 80003ea:	2001      	movs	r0, #1
 80003ec:	f7ff ff8e 	bl	800030c <LL_GPIO_AF_SetEXTISource>
 80003f0:	2340      	movs	r3, #64	; 0x40
 80003f2:	61bb      	str	r3, [r7, #24]
 80003f4:	2301      	movs	r3, #1
 80003f6:	773b      	strb	r3, [r7, #28]
 80003f8:	2300      	movs	r3, #0
 80003fa:	777b      	strb	r3, [r7, #29]
 80003fc:	2301      	movs	r3, #1
 80003fe:	77bb      	strb	r3, [r7, #30]
 8000400:	f107 0318 	add.w	r3, r7, #24
 8000404:	4618      	mov	r0, r3
 8000406:	f001 f847 	bl	8001498 <LL_EXTI_Init>
 800040a:	2204      	movs	r2, #4
 800040c:	f244 0140 	movw	r1, #16448	; 0x4040
 8000410:	480e      	ldr	r0, [pc, #56]	; (800044c <MX_GPIO_Init+0xe4>)
 8000412:	f7ff ff39 	bl	8000288 <LL_GPIO_SetPinMode>
 8000416:	f7ff fe99 	bl	800014c <__NVIC_GetPriorityGrouping>
 800041a:	4603      	mov	r3, r0
 800041c:	2200      	movs	r2, #0
 800041e:	2100      	movs	r1, #0
 8000420:	4618      	mov	r0, r3
 8000422:	f7ff fee7 	bl	80001f4 <NVIC_EncodePriority>
 8000426:	4603      	mov	r3, r0
 8000428:	4619      	mov	r1, r3
 800042a:	2017      	movs	r0, #23
 800042c:	f7ff feb8 	bl	80001a0 <__NVIC_SetPriority>
 8000430:	2017      	movs	r0, #23
 8000432:	f7ff fe99 	bl	8000168 <__NVIC_EnableIRQ>
 8000436:	bf00      	nop
 8000438:	3720      	adds	r7, #32
 800043a:	46bd      	mov	sp, r7
 800043c:	bd80      	pop	{r7, pc}
 800043e:	bf00      	nop
 8000440:	041f041f 	.word	0x041f041f
 8000444:	40010800 	.word	0x40010800
 8000448:	04f200f2 	.word	0x04f200f2
 800044c:	40010c00 	.word	0x40010c00
 8000450:	04018081 	.word	0x04018081
 8000454:	0f000001 	.word	0x0f000001

08000458 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8000458:	b480      	push	{r7}
 800045a:	b085      	sub	sp, #20
 800045c:	af00      	add	r7, sp, #0
 800045e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	f003 0307 	and.w	r3, r3, #7
 8000466:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000468:	4b0c      	ldr	r3, [pc, #48]	; (800049c <__NVIC_SetPriorityGrouping+0x44>)
 800046a:	68db      	ldr	r3, [r3, #12]
 800046c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800046e:	68ba      	ldr	r2, [r7, #8]
 8000470:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000474:	4013      	ands	r3, r2
 8000476:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 8000478:	68fb      	ldr	r3, [r7, #12]
 800047a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800047c:	68bb      	ldr	r3, [r7, #8]
 800047e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8000480:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000484:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000488:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800048a:	4a04      	ldr	r2, [pc, #16]	; (800049c <__NVIC_SetPriorityGrouping+0x44>)
 800048c:	68bb      	ldr	r3, [r7, #8]
 800048e:	60d3      	str	r3, [r2, #12]
}
 8000490:	bf00      	nop
 8000492:	3714      	adds	r7, #20
 8000494:	46bd      	mov	sp, r7
 8000496:	bc80      	pop	{r7}
 8000498:	4770      	bx	lr
 800049a:	bf00      	nop
 800049c:	e000ed00 	.word	0xe000ed00

080004a0 <LL_RCC_HSI_Enable>:
  * @brief  Enable HSI oscillator
  * @rmtoll CR           HSION         LL_RCC_HSI_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSI_Enable(void)
{
 80004a0:	b480      	push	{r7}
 80004a2:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_HSION);
 80004a4:	4b04      	ldr	r3, [pc, #16]	; (80004b8 <LL_RCC_HSI_Enable+0x18>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	4a03      	ldr	r2, [pc, #12]	; (80004b8 <LL_RCC_HSI_Enable+0x18>)
 80004aa:	f043 0301 	orr.w	r3, r3, #1
 80004ae:	6013      	str	r3, [r2, #0]
}
 80004b0:	bf00      	nop
 80004b2:	46bd      	mov	sp, r7
 80004b4:	bc80      	pop	{r7}
 80004b6:	4770      	bx	lr
 80004b8:	40021000 	.word	0x40021000

080004bc <LL_RCC_HSI_IsReady>:
  * @brief  Check if HSI clock is ready
  * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
{
 80004bc:	b480      	push	{r7}
 80004be:	af00      	add	r7, sp, #0
  return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 80004c0:	4b06      	ldr	r3, [pc, #24]	; (80004dc <LL_RCC_HSI_IsReady+0x20>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	f003 0302 	and.w	r3, r3, #2
 80004c8:	2b02      	cmp	r3, #2
 80004ca:	bf0c      	ite	eq
 80004cc:	2301      	moveq	r3, #1
 80004ce:	2300      	movne	r3, #0
 80004d0:	b2db      	uxtb	r3, r3
}
 80004d2:	4618      	mov	r0, r3
 80004d4:	46bd      	mov	sp, r7
 80004d6:	bc80      	pop	{r7}
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop
 80004dc:	40021000 	.word	0x40021000

080004e0 <LL_RCC_HSI_SetCalibTrimming>:
  * @rmtoll CR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
  * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
{
 80004e0:	b480      	push	{r7}
 80004e2:	b083      	sub	sp, #12
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, Value << RCC_CR_HSITRIM_Pos);
 80004e8:	4b06      	ldr	r3, [pc, #24]	; (8000504 <LL_RCC_HSI_SetCalibTrimming+0x24>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	00db      	lsls	r3, r3, #3
 80004f4:	4903      	ldr	r1, [pc, #12]	; (8000504 <LL_RCC_HSI_SetCalibTrimming+0x24>)
 80004f6:	4313      	orrs	r3, r2
 80004f8:	600b      	str	r3, [r1, #0]
}
 80004fa:	bf00      	nop
 80004fc:	370c      	adds	r7, #12
 80004fe:	46bd      	mov	sp, r7
 8000500:	bc80      	pop	{r7}
 8000502:	4770      	bx	lr
 8000504:	40021000 	.word	0x40021000

08000508 <LL_RCC_SetSysClkSource>:
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
{
 8000508:	b480      	push	{r7}
 800050a:	b083      	sub	sp, #12
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
 8000510:	4b06      	ldr	r3, [pc, #24]	; (800052c <LL_RCC_SetSysClkSource+0x24>)
 8000512:	685b      	ldr	r3, [r3, #4]
 8000514:	f023 0203 	bic.w	r2, r3, #3
 8000518:	4904      	ldr	r1, [pc, #16]	; (800052c <LL_RCC_SetSysClkSource+0x24>)
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	4313      	orrs	r3, r2
 800051e:	604b      	str	r3, [r1, #4]
}
 8000520:	bf00      	nop
 8000522:	370c      	adds	r7, #12
 8000524:	46bd      	mov	sp, r7
 8000526:	bc80      	pop	{r7}
 8000528:	4770      	bx	lr
 800052a:	bf00      	nop
 800052c:	40021000 	.word	0x40021000

08000530 <LL_RCC_GetSysClkSource>:
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
  */
__STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
{
 8000530:	b480      	push	{r7}
 8000532:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
 8000534:	4b03      	ldr	r3, [pc, #12]	; (8000544 <LL_RCC_GetSysClkSource+0x14>)
 8000536:	685b      	ldr	r3, [r3, #4]
 8000538:	f003 030c 	and.w	r3, r3, #12
}
 800053c:	4618      	mov	r0, r3
 800053e:	46bd      	mov	sp, r7
 8000540:	bc80      	pop	{r7}
 8000542:	4770      	bx	lr
 8000544:	40021000 	.word	0x40021000

08000548 <LL_RCC_SetAHBPrescaler>:
  *         @arg @ref LL_RCC_SYSCLK_DIV_256
  *         @arg @ref LL_RCC_SYSCLK_DIV_512
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
{
 8000548:	b480      	push	{r7}
 800054a:	b083      	sub	sp, #12
 800054c:	af00      	add	r7, sp, #0
 800054e:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
 8000550:	4b06      	ldr	r3, [pc, #24]	; (800056c <LL_RCC_SetAHBPrescaler+0x24>)
 8000552:	685b      	ldr	r3, [r3, #4]
 8000554:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8000558:	4904      	ldr	r1, [pc, #16]	; (800056c <LL_RCC_SetAHBPrescaler+0x24>)
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	4313      	orrs	r3, r2
 800055e:	604b      	str	r3, [r1, #4]
}
 8000560:	bf00      	nop
 8000562:	370c      	adds	r7, #12
 8000564:	46bd      	mov	sp, r7
 8000566:	bc80      	pop	{r7}
 8000568:	4770      	bx	lr
 800056a:	bf00      	nop
 800056c:	40021000 	.word	0x40021000

08000570 <LL_RCC_SetAPB1Prescaler>:
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
{
 8000570:	b480      	push	{r7}
 8000572:	b083      	sub	sp, #12
 8000574:	af00      	add	r7, sp, #0
 8000576:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
 8000578:	4b06      	ldr	r3, [pc, #24]	; (8000594 <LL_RCC_SetAPB1Prescaler+0x24>)
 800057a:	685b      	ldr	r3, [r3, #4]
 800057c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8000580:	4904      	ldr	r1, [pc, #16]	; (8000594 <LL_RCC_SetAPB1Prescaler+0x24>)
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	4313      	orrs	r3, r2
 8000586:	604b      	str	r3, [r1, #4]
}
 8000588:	bf00      	nop
 800058a:	370c      	adds	r7, #12
 800058c:	46bd      	mov	sp, r7
 800058e:	bc80      	pop	{r7}
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop
 8000594:	40021000 	.word	0x40021000

08000598 <LL_RCC_SetAPB2Prescaler>:
  *         @arg @ref LL_RCC_APB2_DIV_8
  *         @arg @ref LL_RCC_APB2_DIV_16
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
{
 8000598:	b480      	push	{r7}
 800059a:	b083      	sub	sp, #12
 800059c:	af00      	add	r7, sp, #0
 800059e:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
 80005a0:	4b06      	ldr	r3, [pc, #24]	; (80005bc <LL_RCC_SetAPB2Prescaler+0x24>)
 80005a2:	685b      	ldr	r3, [r3, #4]
 80005a4:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80005a8:	4904      	ldr	r1, [pc, #16]	; (80005bc <LL_RCC_SetAPB2Prescaler+0x24>)
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	4313      	orrs	r3, r2
 80005ae:	604b      	str	r3, [r1, #4]
}
 80005b0:	bf00      	nop
 80005b2:	370c      	adds	r7, #12
 80005b4:	46bd      	mov	sp, r7
 80005b6:	bc80      	pop	{r7}
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop
 80005bc:	40021000 	.word	0x40021000

080005c0 <LL_RCC_PLL_Enable>:
  * @brief  Enable PLL
  * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_PLL_Enable(void)
{
 80005c0:	b480      	push	{r7}
 80005c2:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_PLLON);
 80005c4:	4b04      	ldr	r3, [pc, #16]	; (80005d8 <LL_RCC_PLL_Enable+0x18>)
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a03      	ldr	r2, [pc, #12]	; (80005d8 <LL_RCC_PLL_Enable+0x18>)
 80005ca:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80005ce:	6013      	str	r3, [r2, #0]
}
 80005d0:	bf00      	nop
 80005d2:	46bd      	mov	sp, r7
 80005d4:	bc80      	pop	{r7}
 80005d6:	4770      	bx	lr
 80005d8:	40021000 	.word	0x40021000

080005dc <LL_RCC_PLL_IsReady>:
  * @brief  Check if PLL Ready
  * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
{
 80005dc:	b480      	push	{r7}
 80005de:	af00      	add	r7, sp, #0
  return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
 80005e0:	4b06      	ldr	r3, [pc, #24]	; (80005fc <LL_RCC_PLL_IsReady+0x20>)
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80005e8:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80005ec:	bf0c      	ite	eq
 80005ee:	2301      	moveq	r3, #1
 80005f0:	2300      	movne	r3, #0
 80005f2:	b2db      	uxtb	r3, r3
}
 80005f4:	4618      	mov	r0, r3
 80005f6:	46bd      	mov	sp, r7
 80005f8:	bc80      	pop	{r7}
 80005fa:	4770      	bx	lr
 80005fc:	40021000 	.word	0x40021000

08000600 <LL_RCC_PLL_ConfigDomain_SYS>:
  *
  *         (*) value not defined in all devices
  * @retval None
  */
__STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLMul)
{
 8000600:	b480      	push	{r7}
 8000602:	b083      	sub	sp, #12
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
 8000608:	6039      	str	r1, [r7, #0]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL,
 800060a:	4b08      	ldr	r3, [pc, #32]	; (800062c <LL_RCC_PLL_ConfigDomain_SYS+0x2c>)
 800060c:	685b      	ldr	r3, [r3, #4]
 800060e:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8000618:	683b      	ldr	r3, [r7, #0]
 800061a:	430b      	orrs	r3, r1
 800061c:	4903      	ldr	r1, [pc, #12]	; (800062c <LL_RCC_PLL_ConfigDomain_SYS+0x2c>)
 800061e:	4313      	orrs	r3, r2
 8000620:	604b      	str	r3, [r1, #4]
             (Source & RCC_CFGR2_PREDIV1) | ((Source & (RCC_CFGR2_PREDIV1SRC << 4U)) >> 4U));
#else
  MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PREDIV1, (Source & RCC_CFGR2_PREDIV1));
#endif /*RCC_CFGR2_PREDIV1SRC*/
#endif /*RCC_CFGR2_PREDIV1*/
}
 8000622:	bf00      	nop
 8000624:	370c      	adds	r7, #12
 8000626:	46bd      	mov	sp, r7
 8000628:	bc80      	pop	{r7}
 800062a:	4770      	bx	lr
 800062c:	40021000 	.word	0x40021000

08000630 <LL_APB1_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
{
 8000630:	b480      	push	{r7}
 8000632:	b085      	sub	sp, #20
 8000634:	af00      	add	r7, sp, #0
 8000636:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB1ENR, Periphs);
 8000638:	4b08      	ldr	r3, [pc, #32]	; (800065c <LL_APB1_GRP1_EnableClock+0x2c>)
 800063a:	69da      	ldr	r2, [r3, #28]
 800063c:	4907      	ldr	r1, [pc, #28]	; (800065c <LL_APB1_GRP1_EnableClock+0x2c>)
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	4313      	orrs	r3, r2
 8000642:	61cb      	str	r3, [r1, #28]
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 8000644:	4b05      	ldr	r3, [pc, #20]	; (800065c <LL_APB1_GRP1_EnableClock+0x2c>)
 8000646:	69da      	ldr	r2, [r3, #28]
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	4013      	ands	r3, r2
 800064c:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 800064e:	68fb      	ldr	r3, [r7, #12]
}
 8000650:	bf00      	nop
 8000652:	3714      	adds	r7, #20
 8000654:	46bd      	mov	sp, r7
 8000656:	bc80      	pop	{r7}
 8000658:	4770      	bx	lr
 800065a:	bf00      	nop
 800065c:	40021000 	.word	0x40021000

08000660 <LL_APB2_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
 8000660:	b480      	push	{r7}
 8000662:	b085      	sub	sp, #20
 8000664:	af00      	add	r7, sp, #0
 8000666:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 8000668:	4b08      	ldr	r3, [pc, #32]	; (800068c <LL_APB2_GRP1_EnableClock+0x2c>)
 800066a:	699a      	ldr	r2, [r3, #24]
 800066c:	4907      	ldr	r1, [pc, #28]	; (800068c <LL_APB2_GRP1_EnableClock+0x2c>)
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	4313      	orrs	r3, r2
 8000672:	618b      	str	r3, [r1, #24]
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8000674:	4b05      	ldr	r3, [pc, #20]	; (800068c <LL_APB2_GRP1_EnableClock+0x2c>)
 8000676:	699a      	ldr	r2, [r3, #24]
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	4013      	ands	r3, r2
 800067c:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 800067e:	68fb      	ldr	r3, [r7, #12]
}
 8000680:	bf00      	nop
 8000682:	3714      	adds	r7, #20
 8000684:	46bd      	mov	sp, r7
 8000686:	bc80      	pop	{r7}
 8000688:	4770      	bx	lr
 800068a:	bf00      	nop
 800068c:	40021000 	.word	0x40021000

08000690 <LL_FLASH_SetLatency>:
  *         @arg @ref LL_FLASH_LATENCY_1
  *         @arg @ref LL_FLASH_LATENCY_2
  * @retval None
  */
__STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
{
 8000690:	b480      	push	{r7}
 8000692:	b083      	sub	sp, #12
 8000694:	af00      	add	r7, sp, #0
 8000696:	6078      	str	r0, [r7, #4]
  MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 8000698:	4b06      	ldr	r3, [pc, #24]	; (80006b4 <LL_FLASH_SetLatency+0x24>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	f023 0207 	bic.w	r2, r3, #7
 80006a0:	4904      	ldr	r1, [pc, #16]	; (80006b4 <LL_FLASH_SetLatency+0x24>)
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	4313      	orrs	r3, r2
 80006a6:	600b      	str	r3, [r1, #0]
}
 80006a8:	bf00      	nop
 80006aa:	370c      	adds	r7, #12
 80006ac:	46bd      	mov	sp, r7
 80006ae:	bc80      	pop	{r7}
 80006b0:	4770      	bx	lr
 80006b2:	bf00      	nop
 80006b4:	40022000 	.word	0x40022000

080006b8 <LL_FLASH_GetLatency>:
  *         @arg @ref LL_FLASH_LATENCY_0
  *         @arg @ref LL_FLASH_LATENCY_1
  *         @arg @ref LL_FLASH_LATENCY_2
  */
__STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
{
 80006b8:	b480      	push	{r7}
 80006ba:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 80006bc:	4b03      	ldr	r3, [pc, #12]	; (80006cc <LL_FLASH_GetLatency+0x14>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	f003 0307 	and.w	r3, r3, #7
}
 80006c4:	4618      	mov	r0, r3
 80006c6:	46bd      	mov	sp, r7
 80006c8:	bc80      	pop	{r7}
 80006ca:	4770      	bx	lr
 80006cc:	40022000 	.word	0x40022000

080006d0 <LL_TIM_EnableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_EnableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
{
 80006d0:	b480      	push	{r7}
 80006d2:	b083      	sub	sp, #12
 80006d4:	af00      	add	r7, sp, #0
 80006d6:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	f043 0201 	orr.w	r2, r3, #1
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	601a      	str	r2, [r3, #0]
}
 80006e4:	bf00      	nop
 80006e6:	370c      	adds	r7, #12
 80006e8:	46bd      	mov	sp, r7
 80006ea:	bc80      	pop	{r7}
 80006ec:	4770      	bx	lr

080006ee <LL_TIM_EnableIT_UPDATE>:
  * @rmtoll DIER         UIE           LL_TIM_EnableIT_UPDATE
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
{
 80006ee:	b480      	push	{r7}
 80006f0:	b083      	sub	sp, #12
 80006f2:	af00      	add	r7, sp, #0
 80006f4:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->DIER, TIM_DIER_UIE);
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	68db      	ldr	r3, [r3, #12]
 80006fa:	f043 0201 	orr.w	r2, r3, #1
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	60da      	str	r2, [r3, #12]
}
 8000702:	bf00      	nop
 8000704:	370c      	adds	r7, #12
 8000706:	46bd      	mov	sp, r7
 8000708:	bc80      	pop	{r7}
 800070a:	4770      	bx	lr

0800070c <LL_GPIO_ReadInputPort>:
  * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
  * @param  GPIOx GPIO Port
  * @retval Input data register value of port
  */
__STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
{
 800070c:	b480      	push	{r7}
 800070e:	b083      	sub	sp, #12
 8000710:	af00      	add	r7, sp, #0
 8000712:	6078      	str	r0, [r7, #4]
  return (READ_REG(GPIOx->IDR));
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	689b      	ldr	r3, [r3, #8]
}
 8000718:	4618      	mov	r0, r3
 800071a:	370c      	adds	r7, #12
 800071c:	46bd      	mov	sp, r7
 800071e:	bc80      	pop	{r7}
 8000720:	4770      	bx	lr

08000722 <LL_GPIO_SetOutputPin>:
  *         @arg @ref LL_GPIO_PIN_15
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
 8000722:	b480      	push	{r7}
 8000724:	b083      	sub	sp, #12
 8000726:	af00      	add	r7, sp, #0
 8000728:	6078      	str	r0, [r7, #4]
 800072a:	6039      	str	r1, [r7, #0]
  WRITE_REG(GPIOx->BSRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 800072c:	683b      	ldr	r3, [r7, #0]
 800072e:	0a1b      	lsrs	r3, r3, #8
 8000730:	b29a      	uxth	r2, r3
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	611a      	str	r2, [r3, #16]
}
 8000736:	bf00      	nop
 8000738:	370c      	adds	r7, #12
 800073a:	46bd      	mov	sp, r7
 800073c:	bc80      	pop	{r7}
 800073e:	4770      	bx	lr

08000740 <LL_GPIO_ResetOutputPin>:
  *         @arg @ref LL_GPIO_PIN_15
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
 8000740:	b480      	push	{r7}
 8000742:	b083      	sub	sp, #12
 8000744:	af00      	add	r7, sp, #0
 8000746:	6078      	str	r0, [r7, #4]
 8000748:	6039      	str	r1, [r7, #0]
  WRITE_REG(GPIOx->BRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 800074a:	683b      	ldr	r3, [r7, #0]
 800074c:	0a1b      	lsrs	r3, r3, #8
 800074e:	b29a      	uxth	r2, r3
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	615a      	str	r2, [r3, #20]
}
 8000754:	bf00      	nop
 8000756:	370c      	adds	r7, #12
 8000758:	46bd      	mov	sp, r7
 800075a:	bc80      	pop	{r7}
 800075c:	4770      	bx	lr
	...

08000760 <LL_GPIO_AF_Remap_SWJ_NOJTAG>:
  * @rmtoll MAPR          SWJ_CFG           LL_GPIO_AF_Remap_SWJ_NOJTAG
  * @note  NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_AF_Remap_SWJ_NOJTAG(void)
{
 8000760:	b480      	push	{r7}
 8000762:	af00      	add	r7, sp, #0
  CLEAR_BIT(AFIO->MAPR,AFIO_MAPR_SWJ_CFG);
 8000764:	4b07      	ldr	r3, [pc, #28]	; (8000784 <LL_GPIO_AF_Remap_SWJ_NOJTAG+0x24>)
 8000766:	685b      	ldr	r3, [r3, #4]
 8000768:	4a06      	ldr	r2, [pc, #24]	; (8000784 <LL_GPIO_AF_Remap_SWJ_NOJTAG+0x24>)
 800076a:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 800076e:	6053      	str	r3, [r2, #4]
  SET_BIT(AFIO->MAPR, AFIO_MAPR_SWJ_CFG_JTAGDISABLE);
 8000770:	4b04      	ldr	r3, [pc, #16]	; (8000784 <LL_GPIO_AF_Remap_SWJ_NOJTAG+0x24>)
 8000772:	685b      	ldr	r3, [r3, #4]
 8000774:	4a03      	ldr	r2, [pc, #12]	; (8000784 <LL_GPIO_AF_Remap_SWJ_NOJTAG+0x24>)
 8000776:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800077a:	6053      	str	r3, [r2, #4]
}
 800077c:	bf00      	nop
 800077e:	46bd      	mov	sp, r7
 8000780:	bc80      	pop	{r7}
 8000782:	4770      	bx	lr
 8000784:	40010000 	.word	0x40010000

08000788 <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 8000788:	b580      	push	{r7, lr}
 800078a:	af00      	add	r7, sp, #0

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */

	LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_AFIO);
 800078c:	2001      	movs	r0, #1
 800078e:	f7ff ff67 	bl	8000660 <LL_APB2_GRP1_EnableClock>
	LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
 8000792:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 8000796:	f7ff ff4b 	bl	8000630 <LL_APB1_GRP1_EnableClock>

	NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800079a:	2003      	movs	r0, #3
 800079c:	f7ff fe5c 	bl	8000458 <__NVIC_SetPriorityGrouping>

	/* System interrupt init*/

	/** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
	 */
	LL_GPIO_AF_Remap_SWJ_NOJTAG();
 80007a0:	f7ff ffde 	bl	8000760 <LL_GPIO_AF_Remap_SWJ_NOJTAG>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 80007a4:	f000 f9f2 	bl	8000b8c <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 80007a8:	f7ff fdde 	bl	8000368 <MX_GPIO_Init>
	MX_TIM1_Init();
 80007ac:	f000 fd7c 	bl	80012a8 <MX_TIM1_Init>
	/* USER CODE BEGIN 2 */
	LL_TIM_EnableCounter(TIM1);
 80007b0:	489b      	ldr	r0, [pc, #620]	; (8000a20 <main+0x298>)
 80007b2:	f7ff ff8d 	bl	80006d0 <LL_TIM_EnableCounter>
	LL_TIM_EnableIT_UPDATE(TIM1);
 80007b6:	489a      	ldr	r0, [pc, #616]	; (8000a20 <main+0x298>)
 80007b8:	f7ff ff99 	bl	80006ee <LL_TIM_EnableIT_UPDATE>
	if (((LL_GPIO_ReadInputPort(sw_GPIO_Port)) & (1<<8)) == 0){
 80007bc:	4899      	ldr	r0, [pc, #612]	; (8000a24 <main+0x29c>)
 80007be:	f7ff ffa5 	bl	800070c <LL_GPIO_ReadInputPort>
 80007c2:	4603      	mov	r3, r0
 80007c4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80007c8:	2b00      	cmp	r3, #0
 80007ca:	d10d      	bne.n	80007e8 <main+0x60>
		//HAL_Delay(100);
		LL_mDelay(100);
 80007cc:	2064      	movs	r0, #100	; 0x64
 80007ce:	f001 f8b5 	bl	800193c <LL_mDelay>
		if (((LL_GPIO_ReadInputPort(sw_GPIO_Port)) & (1<<8)) == 0)S=1;
 80007d2:	4894      	ldr	r0, [pc, #592]	; (8000a24 <main+0x29c>)
 80007d4:	f7ff ff9a 	bl	800070c <LL_GPIO_ReadInputPort>
 80007d8:	4603      	mov	r3, r0
 80007da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80007de:	2b00      	cmp	r3, #0
 80007e0:	d102      	bne.n	80007e8 <main+0x60>
 80007e2:	4b91      	ldr	r3, [pc, #580]	; (8000a28 <main+0x2a0>)
 80007e4:	2201      	movs	r2, #1
 80007e6:	701a      	strb	r2, [r3, #0]
	}
	if(!S)
 80007e8:	4b8f      	ldr	r3, [pc, #572]	; (8000a28 <main+0x2a0>)
 80007ea:	781b      	ldrb	r3, [r3, #0]
 80007ec:	f083 0301 	eor.w	r3, r3, #1
 80007f0:	b2db      	uxtb	r3, r3
 80007f2:	2b00      	cmp	r3, #0
 80007f4:	d004      	beq.n	8000800 <main+0x78>
		LL_GPIO_SetOutputPin(led_GPIO_Port, led_Pin);
 80007f6:	498d      	ldr	r1, [pc, #564]	; (8000a2c <main+0x2a4>)
 80007f8:	488a      	ldr	r0, [pc, #552]	; (8000a24 <main+0x29c>)
 80007fa:	f7ff ff92 	bl	8000722 <LL_GPIO_SetOutputPin>
 80007fe:	e003      	b.n	8000808 <main+0x80>
	else
		LL_GPIO_ResetOutputPin(led_GPIO_Port, led_Pin);
 8000800:	498a      	ldr	r1, [pc, #552]	; (8000a2c <main+0x2a4>)
 8000802:	4888      	ldr	r0, [pc, #544]	; (8000a24 <main+0x29c>)
 8000804:	f7ff ff9c 	bl	8000740 <LL_GPIO_ResetOutputPin>

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1)
	{
		show_n(nn, 0);
 8000808:	4b89      	ldr	r3, [pc, #548]	; (8000a30 <main+0x2a8>)
 800080a:	881b      	ldrh	r3, [r3, #0]
 800080c:	b2db      	uxtb	r3, r3
 800080e:	2100      	movs	r1, #0
 8000810:	4618      	mov	r0, r3
 8000812:	f000 f9fb 	bl	8000c0c <show_n>
		i=0;
 8000816:	4b87      	ldr	r3, [pc, #540]	; (8000a34 <main+0x2ac>)
 8000818:	2200      	movs	r2, #0
 800081a:	801a      	strh	r2, [r3, #0]
		//				LL_GPIO_SetOutputPin(LO_GPIO_Port, LO_Pin);
		while(i<260)
 800081c:	e01d      	b.n	800085a <main+0xd2>
		{
			delay_us10;
 800081e:	4b86      	ldr	r3, [pc, #536]	; (8000a38 <main+0x2b0>)
 8000820:	2202      	movs	r2, #2
 8000822:	601a      	str	r2, [r3, #0]
 8000824:	bf00      	nop
 8000826:	4b84      	ldr	r3, [pc, #528]	; (8000a38 <main+0x2b0>)
 8000828:	681b      	ldr	r3, [r3, #0]
 800082a:	2b00      	cmp	r3, #0
 800082c:	d1fb      	bne.n	8000826 <main+0x9e>
			i++;
 800082e:	4b81      	ldr	r3, [pc, #516]	; (8000a34 <main+0x2ac>)
 8000830:	881b      	ldrh	r3, [r3, #0]
 8000832:	3301      	adds	r3, #1
 8000834:	b29a      	uxth	r2, r3
 8000836:	4b7f      	ldr	r3, [pc, #508]	; (8000a34 <main+0x2ac>)
 8000838:	801a      	strh	r2, [r3, #0]
			if(i%4==0){
 800083a:	4b7e      	ldr	r3, [pc, #504]	; (8000a34 <main+0x2ac>)
 800083c:	881b      	ldrh	r3, [r3, #0]
 800083e:	f003 0303 	and.w	r3, r3, #3
 8000842:	b29b      	uxth	r3, r3
 8000844:	2b00      	cmp	r3, #0
 8000846:	d104      	bne.n	8000852 <main+0xca>
				LL_GPIO_SetOutputPin(do_GPIO_Port, do_Pin);
 8000848:	497c      	ldr	r1, [pc, #496]	; (8000a3c <main+0x2b4>)
 800084a:	487d      	ldr	r0, [pc, #500]	; (8000a40 <main+0x2b8>)
 800084c:	f7ff ff69 	bl	8000722 <LL_GPIO_SetOutputPin>
 8000850:	e003      	b.n	800085a <main+0xd2>
			}else{
				LL_GPIO_ResetOutputPin(do_GPIO_Port, do_Pin);
 8000852:	497a      	ldr	r1, [pc, #488]	; (8000a3c <main+0x2b4>)
 8000854:	487a      	ldr	r0, [pc, #488]	; (8000a40 <main+0x2b8>)
 8000856:	f7ff ff73 	bl	8000740 <LL_GPIO_ResetOutputPin>
		while(i<260)
 800085a:	4b76      	ldr	r3, [pc, #472]	; (8000a34 <main+0x2ac>)
 800085c:	881b      	ldrh	r3, [r3, #0]
 800085e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8000862:	d3dc      	bcc.n	800081e <main+0x96>
			}
		}


		show_n(nn, 1);
 8000864:	4b72      	ldr	r3, [pc, #456]	; (8000a30 <main+0x2a8>)
 8000866:	881b      	ldrh	r3, [r3, #0]
 8000868:	b2db      	uxtb	r3, r3
 800086a:	2101      	movs	r1, #1
 800086c:	4618      	mov	r0, r3
 800086e:	f000 f9cd 	bl	8000c0c <show_n>
		i=0;
 8000872:	4b70      	ldr	r3, [pc, #448]	; (8000a34 <main+0x2ac>)
 8000874:	2200      	movs	r2, #0
 8000876:	801a      	strh	r2, [r3, #0]
		//				LL_GPIO_SetOutputPin(LO_GPIO_Port, LO_Pin);
		while(i<260)
 8000878:	e01d      	b.n	80008b6 <main+0x12e>
		{
			delay_us10;
 800087a:	4b6f      	ldr	r3, [pc, #444]	; (8000a38 <main+0x2b0>)
 800087c:	2202      	movs	r2, #2
 800087e:	601a      	str	r2, [r3, #0]
 8000880:	bf00      	nop
 8000882:	4b6d      	ldr	r3, [pc, #436]	; (8000a38 <main+0x2b0>)
 8000884:	681b      	ldr	r3, [r3, #0]
 8000886:	2b00      	cmp	r3, #0
 8000888:	d1fb      	bne.n	8000882 <main+0xfa>
			i++;
 800088a:	4b6a      	ldr	r3, [pc, #424]	; (8000a34 <main+0x2ac>)
 800088c:	881b      	ldrh	r3, [r3, #0]
 800088e:	3301      	adds	r3, #1
 8000890:	b29a      	uxth	r2, r3
 8000892:	4b68      	ldr	r3, [pc, #416]	; (8000a34 <main+0x2ac>)
 8000894:	801a      	strh	r2, [r3, #0]
			if(i%4==0){
 8000896:	4b67      	ldr	r3, [pc, #412]	; (8000a34 <main+0x2ac>)
 8000898:	881b      	ldrh	r3, [r3, #0]
 800089a:	f003 0303 	and.w	r3, r3, #3
 800089e:	b29b      	uxth	r3, r3
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	d104      	bne.n	80008ae <main+0x126>
				LL_GPIO_SetOutputPin(yo_GPIO_Port, yo_Pin);
 80008a4:	4967      	ldr	r1, [pc, #412]	; (8000a44 <main+0x2bc>)
 80008a6:	4866      	ldr	r0, [pc, #408]	; (8000a40 <main+0x2b8>)
 80008a8:	f7ff ff3b 	bl	8000722 <LL_GPIO_SetOutputPin>
 80008ac:	e003      	b.n	80008b6 <main+0x12e>
			}else{
				LL_GPIO_ResetOutputPin(yo_GPIO_Port, yo_Pin);
 80008ae:	4965      	ldr	r1, [pc, #404]	; (8000a44 <main+0x2bc>)
 80008b0:	4863      	ldr	r0, [pc, #396]	; (8000a40 <main+0x2b8>)
 80008b2:	f7ff ff45 	bl	8000740 <LL_GPIO_ResetOutputPin>
		while(i<260)
 80008b6:	4b5f      	ldr	r3, [pc, #380]	; (8000a34 <main+0x2ac>)
 80008b8:	881b      	ldrh	r3, [r3, #0]
 80008ba:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80008be:	d3dc      	bcc.n	800087a <main+0xf2>
			}
		}

		if (((LL_GPIO_ReadInputPort(button_GPIO_Port)) & (1<<7)) == 0){
 80008c0:	4858      	ldr	r0, [pc, #352]	; (8000a24 <main+0x29c>)
 80008c2:	f7ff ff23 	bl	800070c <LL_GPIO_ReadInputPort>
 80008c6:	4603      	mov	r3, r0
 80008c8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80008cc:	2b00      	cmp	r3, #0
 80008ce:	d10d      	bne.n	80008ec <main+0x164>
			Gcnt++;
 80008d0:	4b5d      	ldr	r3, [pc, #372]	; (8000a48 <main+0x2c0>)
 80008d2:	681b      	ldr	r3, [r3, #0]
 80008d4:	3301      	adds	r3, #1
 80008d6:	4a5c      	ldr	r2, [pc, #368]	; (8000a48 <main+0x2c0>)
 80008d8:	6013      	str	r3, [r2, #0]
			if(Gcnt>150000)
 80008da:	4b5b      	ldr	r3, [pc, #364]	; (8000a48 <main+0x2c0>)
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	4a5b      	ldr	r2, [pc, #364]	; (8000a4c <main+0x2c4>)
 80008e0:	4293      	cmp	r3, r2
 80008e2:	d91b      	bls.n	800091c <main+0x194>
				C=1;
 80008e4:	4b5a      	ldr	r3, [pc, #360]	; (8000a50 <main+0x2c8>)
 80008e6:	2201      	movs	r2, #1
 80008e8:	701a      	strb	r2, [r3, #0]
 80008ea:	e017      	b.n	800091c <main+0x194>
		}else{
			if(Gcnt>150000)
 80008ec:	4b56      	ldr	r3, [pc, #344]	; (8000a48 <main+0x2c0>)
 80008ee:	681b      	ldr	r3, [r3, #0]
 80008f0:	4a56      	ldr	r2, [pc, #344]	; (8000a4c <main+0x2c4>)
 80008f2:	4293      	cmp	r3, r2
 80008f4:	d903      	bls.n	80008fe <main+0x176>
				C=1;
 80008f6:	4b56      	ldr	r3, [pc, #344]	; (8000a50 <main+0x2c8>)
 80008f8:	2201      	movs	r2, #1
 80008fa:	701a      	strb	r2, [r3, #0]
 80008fc:	e00b      	b.n	8000916 <main+0x18e>
			else if(Gcnt>10000)
 80008fe:	4b52      	ldr	r3, [pc, #328]	; (8000a48 <main+0x2c0>)
 8000900:	681b      	ldr	r3, [r3, #0]
 8000902:	f242 7210 	movw	r2, #10000	; 0x2710
 8000906:	4293      	cmp	r3, r2
 8000908:	d905      	bls.n	8000916 <main+0x18e>
			{
				G=1;
 800090a:	4b52      	ldr	r3, [pc, #328]	; (8000a54 <main+0x2cc>)
 800090c:	2201      	movs	r2, #1
 800090e:	701a      	strb	r2, [r3, #0]
				C=0;
 8000910:	4b4f      	ldr	r3, [pc, #316]	; (8000a50 <main+0x2c8>)
 8000912:	2200      	movs	r2, #0
 8000914:	701a      	strb	r2, [r3, #0]
			}
			Gcnt=0;
 8000916:	4b4c      	ldr	r3, [pc, #304]	; (8000a48 <main+0x2c0>)
 8000918:	2200      	movs	r2, #0
 800091a:	601a      	str	r2, [r3, #0]
		}
		if((G || S)&&!C)
 800091c:	4b4d      	ldr	r3, [pc, #308]	; (8000a54 <main+0x2cc>)
 800091e:	781b      	ldrb	r3, [r3, #0]
 8000920:	2b00      	cmp	r3, #0
 8000922:	d104      	bne.n	800092e <main+0x1a6>
 8000924:	4b40      	ldr	r3, [pc, #256]	; (8000a28 <main+0x2a0>)
 8000926:	781b      	ldrb	r3, [r3, #0]
 8000928:	2b00      	cmp	r3, #0
 800092a:	f000 80df 	beq.w	8000aec <main+0x364>
 800092e:	4b48      	ldr	r3, [pc, #288]	; (8000a50 <main+0x2c8>)
 8000930:	781b      	ldrb	r3, [r3, #0]
 8000932:	f083 0301 	eor.w	r3, r3, #1
 8000936:	b2db      	uxtb	r3, r3
 8000938:	2b00      	cmp	r3, #0
 800093a:	f000 80d7 	beq.w	8000aec <main+0x364>
		//while(1)
		{
			//LL_GPIO_ResetOutputPin(led_GPIO_Port, led_Pin);
			//while(1)
			if(shot)
 800093e:	4b46      	ldr	r3, [pc, #280]	; (8000a58 <main+0x2d0>)
 8000940:	781b      	ldrb	r3, [r3, #0]
 8000942:	2b00      	cmp	r3, #0
 8000944:	f000 80d2 	beq.w	8000aec <main+0x364>
			{
				//LL_mDelay(20);
				i=0;
 8000948:	4b3a      	ldr	r3, [pc, #232]	; (8000a34 <main+0x2ac>)
 800094a:	2200      	movs	r2, #0
 800094c:	801a      	strh	r2, [r3, #0]
				//				LL_GPIO_SetOutputPin(LO_GPIO_Port, LO_Pin);
				while(i<135)
 800094e:	e01f      	b.n	8000990 <main+0x208>
				{
					LL_GPIO_SetOutputPin(LO_GPIO_Port, LO_Pin);
 8000950:	f240 4104 	movw	r1, #1028	; 0x404
 8000954:	483a      	ldr	r0, [pc, #232]	; (8000a40 <main+0x2b8>)
 8000956:	f7ff fee4 	bl	8000722 <LL_GPIO_SetOutputPin>
					delay_us10;
 800095a:	4b37      	ldr	r3, [pc, #220]	; (8000a38 <main+0x2b0>)
 800095c:	2202      	movs	r2, #2
 800095e:	601a      	str	r2, [r3, #0]
 8000960:	bf00      	nop
 8000962:	4b35      	ldr	r3, [pc, #212]	; (8000a38 <main+0x2b0>)
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	2b00      	cmp	r3, #0
 8000968:	d1fb      	bne.n	8000962 <main+0x1da>
					LL_GPIO_ResetOutputPin(LO_GPIO_Port, LO_Pin);
 800096a:	f240 4104 	movw	r1, #1028	; 0x404
 800096e:	4834      	ldr	r0, [pc, #208]	; (8000a40 <main+0x2b8>)
 8000970:	f7ff fee6 	bl	8000740 <LL_GPIO_ResetOutputPin>
					delay_us10;
 8000974:	4b30      	ldr	r3, [pc, #192]	; (8000a38 <main+0x2b0>)
 8000976:	2202      	movs	r2, #2
 8000978:	601a      	str	r2, [r3, #0]
 800097a:	bf00      	nop
 800097c:	4b2e      	ldr	r3, [pc, #184]	; (8000a38 <main+0x2b0>)
 800097e:	681b      	ldr	r3, [r3, #0]
 8000980:	2b00      	cmp	r3, #0
 8000982:	d1fb      	bne.n	800097c <main+0x1f4>
					i++;
 8000984:	4b2b      	ldr	r3, [pc, #172]	; (8000a34 <main+0x2ac>)
 8000986:	881b      	ldrh	r3, [r3, #0]
 8000988:	3301      	adds	r3, #1
 800098a:	b29a      	uxth	r2, r3
 800098c:	4b29      	ldr	r3, [pc, #164]	; (8000a34 <main+0x2ac>)
 800098e:	801a      	strh	r2, [r3, #0]
				while(i<135)
 8000990:	4b28      	ldr	r3, [pc, #160]	; (8000a34 <main+0x2ac>)
 8000992:	881b      	ldrh	r3, [r3, #0]
 8000994:	2b86      	cmp	r3, #134	; 0x86
 8000996:	d9db      	bls.n	8000950 <main+0x1c8>
				}
				//GPIOA->ODR = (GPIOA->ODR)&(0b1111111111111011);
				//				LL_GPIO_ResetOutputPin(LO_GPIO_Port, LO_Pin);
				i=0;
 8000998:	4b26      	ldr	r3, [pc, #152]	; (8000a34 <main+0x2ac>)
 800099a:	2200      	movs	r2, #0
 800099c:	801a      	strh	r2, [r3, #0]
				while(i<375){
 800099e:	e00d      	b.n	80009bc <main+0x234>
					delay_us10;
 80009a0:	4b25      	ldr	r3, [pc, #148]	; (8000a38 <main+0x2b0>)
 80009a2:	2202      	movs	r2, #2
 80009a4:	601a      	str	r2, [r3, #0]
 80009a6:	bf00      	nop
 80009a8:	4b23      	ldr	r3, [pc, #140]	; (8000a38 <main+0x2b0>)
 80009aa:	681b      	ldr	r3, [r3, #0]
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	d1fb      	bne.n	80009a8 <main+0x220>
					i++;
 80009b0:	4b20      	ldr	r3, [pc, #128]	; (8000a34 <main+0x2ac>)
 80009b2:	881b      	ldrh	r3, [r3, #0]
 80009b4:	3301      	adds	r3, #1
 80009b6:	b29a      	uxth	r2, r3
 80009b8:	4b1e      	ldr	r3, [pc, #120]	; (8000a34 <main+0x2ac>)
 80009ba:	801a      	strh	r2, [r3, #0]
				while(i<375){
 80009bc:	4b1d      	ldr	r3, [pc, #116]	; (8000a34 <main+0x2ac>)
 80009be:	881b      	ldrh	r3, [r3, #0]
 80009c0:	f5b3 7fbb 	cmp.w	r3, #374	; 0x176
 80009c4:	d9ec      	bls.n	80009a0 <main+0x218>
				}
				//LL_mDelay(6);
				i=0;
 80009c6:	4b1b      	ldr	r3, [pc, #108]	; (8000a34 <main+0x2ac>)
 80009c8:	2200      	movs	r2, #0
 80009ca:	801a      	strh	r2, [r3, #0]
				//			LL_GPIO_SetOutputPin(LO_GPIO_Port, LO_Pin);
				while(i<175)
 80009cc:	e01f      	b.n	8000a0e <main+0x286>
				{
					LL_GPIO_SetOutputPin(LO_GPIO_Port, LO_Pin);
 80009ce:	f240 4104 	movw	r1, #1028	; 0x404
 80009d2:	481b      	ldr	r0, [pc, #108]	; (8000a40 <main+0x2b8>)
 80009d4:	f7ff fea5 	bl	8000722 <LL_GPIO_SetOutputPin>
					delay_us10;
 80009d8:	4b17      	ldr	r3, [pc, #92]	; (8000a38 <main+0x2b0>)
 80009da:	2202      	movs	r2, #2
 80009dc:	601a      	str	r2, [r3, #0]
 80009de:	bf00      	nop
 80009e0:	4b15      	ldr	r3, [pc, #84]	; (8000a38 <main+0x2b0>)
 80009e2:	681b      	ldr	r3, [r3, #0]
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d1fb      	bne.n	80009e0 <main+0x258>
					LL_GPIO_ResetOutputPin(LO_GPIO_Port, LO_Pin);
 80009e8:	f240 4104 	movw	r1, #1028	; 0x404
 80009ec:	4814      	ldr	r0, [pc, #80]	; (8000a40 <main+0x2b8>)
 80009ee:	f7ff fea7 	bl	8000740 <LL_GPIO_ResetOutputPin>
					delay_us10;
 80009f2:	4b11      	ldr	r3, [pc, #68]	; (8000a38 <main+0x2b0>)
 80009f4:	2202      	movs	r2, #2
 80009f6:	601a      	str	r2, [r3, #0]
 80009f8:	bf00      	nop
 80009fa:	4b0f      	ldr	r3, [pc, #60]	; (8000a38 <main+0x2b0>)
 80009fc:	681b      	ldr	r3, [r3, #0]
 80009fe:	2b00      	cmp	r3, #0
 8000a00:	d1fb      	bne.n	80009fa <main+0x272>
					i++;
 8000a02:	4b0c      	ldr	r3, [pc, #48]	; (8000a34 <main+0x2ac>)
 8000a04:	881b      	ldrh	r3, [r3, #0]
 8000a06:	3301      	adds	r3, #1
 8000a08:	b29a      	uxth	r2, r3
 8000a0a:	4b0a      	ldr	r3, [pc, #40]	; (8000a34 <main+0x2ac>)
 8000a0c:	801a      	strh	r2, [r3, #0]
				while(i<175)
 8000a0e:	4b09      	ldr	r3, [pc, #36]	; (8000a34 <main+0x2ac>)
 8000a10:	881b      	ldrh	r3, [r3, #0]
 8000a12:	2bae      	cmp	r3, #174	; 0xae
 8000a14:	d9db      	bls.n	80009ce <main+0x246>
				}
				//GPIOA->ODR = (GPIOA->ODR)&(0b1111111111111011);
				//		LL_GPIO_ResetOutputPin(LO_GPIO_Port, LO_Pin);
				//LL_mDelay(7);
				i=0;
 8000a16:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <main+0x2ac>)
 8000a18:	2200      	movs	r2, #0
 8000a1a:	801a      	strh	r2, [r3, #0]
				while(i<440){
 8000a1c:	e02c      	b.n	8000a78 <main+0x2f0>
 8000a1e:	bf00      	nop
 8000a20:	40012c00 	.word	0x40012c00
 8000a24:	40010c00 	.word	0x40010c00
 8000a28:	20000034 	.word	0x20000034
 8000a2c:	04020002 	.word	0x04020002
 8000a30:	20000030 	.word	0x20000030
 8000a34:	20000036 	.word	0x20000036
 8000a38:	2000002c 	.word	0x2000002c
 8000a3c:	04080008 	.word	0x04080008
 8000a40:	40010800 	.word	0x40010800
 8000a44:	04100010 	.word	0x04100010
 8000a48:	20000024 	.word	0x20000024
 8000a4c:	000249f0 	.word	0x000249f0
 8000a50:	20000033 	.word	0x20000033
 8000a54:	20000032 	.word	0x20000032
 8000a58:	20000038 	.word	0x20000038
					delay_us10;
 8000a5c:	4b3f      	ldr	r3, [pc, #252]	; (8000b5c <main+0x3d4>)
 8000a5e:	2202      	movs	r2, #2
 8000a60:	601a      	str	r2, [r3, #0]
 8000a62:	bf00      	nop
 8000a64:	4b3d      	ldr	r3, [pc, #244]	; (8000b5c <main+0x3d4>)
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	d1fb      	bne.n	8000a64 <main+0x2dc>
					i++;
 8000a6c:	4b3c      	ldr	r3, [pc, #240]	; (8000b60 <main+0x3d8>)
 8000a6e:	881b      	ldrh	r3, [r3, #0]
 8000a70:	3301      	adds	r3, #1
 8000a72:	b29a      	uxth	r2, r3
 8000a74:	4b3a      	ldr	r3, [pc, #232]	; (8000b60 <main+0x3d8>)
 8000a76:	801a      	strh	r2, [r3, #0]
				while(i<440){
 8000a78:	4b39      	ldr	r3, [pc, #228]	; (8000b60 <main+0x3d8>)
 8000a7a:	881b      	ldrh	r3, [r3, #0]
 8000a7c:	f5b3 7fdc 	cmp.w	r3, #440	; 0x1b8
 8000a80:	d3ec      	bcc.n	8000a5c <main+0x2d4>
				}
				i=0;
 8000a82:	4b37      	ldr	r3, [pc, #220]	; (8000b60 <main+0x3d8>)
 8000a84:	2200      	movs	r2, #0
 8000a86:	801a      	strh	r2, [r3, #0]
				while(i<500){
 8000a88:	e01f      	b.n	8000aca <main+0x342>
					LL_GPIO_SetOutputPin(LO_GPIO_Port, LO_Pin);
 8000a8a:	f240 4104 	movw	r1, #1028	; 0x404
 8000a8e:	4835      	ldr	r0, [pc, #212]	; (8000b64 <main+0x3dc>)
 8000a90:	f7ff fe47 	bl	8000722 <LL_GPIO_SetOutputPin>
					delay_us10;
 8000a94:	4b31      	ldr	r3, [pc, #196]	; (8000b5c <main+0x3d4>)
 8000a96:	2202      	movs	r2, #2
 8000a98:	601a      	str	r2, [r3, #0]
 8000a9a:	bf00      	nop
 8000a9c:	4b2f      	ldr	r3, [pc, #188]	; (8000b5c <main+0x3d4>)
 8000a9e:	681b      	ldr	r3, [r3, #0]
 8000aa0:	2b00      	cmp	r3, #0
 8000aa2:	d1fb      	bne.n	8000a9c <main+0x314>
					LL_GPIO_ResetOutputPin(LO_GPIO_Port, LO_Pin);
 8000aa4:	f240 4104 	movw	r1, #1028	; 0x404
 8000aa8:	482e      	ldr	r0, [pc, #184]	; (8000b64 <main+0x3dc>)
 8000aaa:	f7ff fe49 	bl	8000740 <LL_GPIO_ResetOutputPin>
					delay_us10;
 8000aae:	4b2b      	ldr	r3, [pc, #172]	; (8000b5c <main+0x3d4>)
 8000ab0:	2202      	movs	r2, #2
 8000ab2:	601a      	str	r2, [r3, #0]
 8000ab4:	bf00      	nop
 8000ab6:	4b29      	ldr	r3, [pc, #164]	; (8000b5c <main+0x3d4>)
 8000ab8:	681b      	ldr	r3, [r3, #0]
 8000aba:	2b00      	cmp	r3, #0
 8000abc:	d1fb      	bne.n	8000ab6 <main+0x32e>
					i++;
 8000abe:	4b28      	ldr	r3, [pc, #160]	; (8000b60 <main+0x3d8>)
 8000ac0:	881b      	ldrh	r3, [r3, #0]
 8000ac2:	3301      	adds	r3, #1
 8000ac4:	b29a      	uxth	r2, r3
 8000ac6:	4b26      	ldr	r3, [pc, #152]	; (8000b60 <main+0x3d8>)
 8000ac8:	801a      	strh	r2, [r3, #0]
				while(i<500){
 8000aca:	4b25      	ldr	r3, [pc, #148]	; (8000b60 <main+0x3d8>)
 8000acc:	881b      	ldrh	r3, [r3, #0]
 8000ace:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8000ad2:	d3da      	bcc.n	8000a8a <main+0x302>
				//					//					delay_us10;
				//					i++;
				//				}
				//LL_GPIO_ResetOutputPin(LO_GPIO_Port, LO_Pin);
				//GPIOA->ODR = (GPIOA->ODR)&(0b1111111111111011);
				shot=0;
 8000ad4:	4b24      	ldr	r3, [pc, #144]	; (8000b68 <main+0x3e0>)
 8000ad6:	2200      	movs	r2, #0
 8000ad8:	701a      	strb	r2, [r3, #0]
				nn++;
 8000ada:	4b24      	ldr	r3, [pc, #144]	; (8000b6c <main+0x3e4>)
 8000adc:	881b      	ldrh	r3, [r3, #0]
 8000ade:	3301      	adds	r3, #1
 8000ae0:	b29a      	uxth	r2, r3
 8000ae2:	4b22      	ldr	r3, [pc, #136]	; (8000b6c <main+0x3e4>)
 8000ae4:	801a      	strh	r2, [r3, #0]
				//if(n>100)n=0;
				G=0;
 8000ae6:	4b22      	ldr	r3, [pc, #136]	; (8000b70 <main+0x3e8>)
 8000ae8:	2200      	movs	r2, #0
 8000aea:	701a      	strb	r2, [r3, #0]
			}
		}
		//		else{
		//			LL_GPIO_SetOutputPin(led_GPIO_Port, led_Pin);
		//		}
		if(C){//calibration of laser
 8000aec:	4b21      	ldr	r3, [pc, #132]	; (8000b74 <main+0x3ec>)
 8000aee:	781b      	ldrb	r3, [r3, #0]
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	d017      	beq.n	8000b24 <main+0x39c>
			if(Wcnt%3==0)
 8000af4:	4b20      	ldr	r3, [pc, #128]	; (8000b78 <main+0x3f0>)
 8000af6:	6819      	ldr	r1, [r3, #0]
 8000af8:	4b20      	ldr	r3, [pc, #128]	; (8000b7c <main+0x3f4>)
 8000afa:	fba3 2301 	umull	r2, r3, r3, r1
 8000afe:	085a      	lsrs	r2, r3, #1
 8000b00:	4613      	mov	r3, r2
 8000b02:	005b      	lsls	r3, r3, #1
 8000b04:	4413      	add	r3, r2
 8000b06:	1aca      	subs	r2, r1, r3
 8000b08:	2a00      	cmp	r2, #0
 8000b0a:	d105      	bne.n	8000b18 <main+0x390>
				LL_GPIO_SetOutputPin(LO_GPIO_Port, LO_Pin);
 8000b0c:	f240 4104 	movw	r1, #1028	; 0x404
 8000b10:	4814      	ldr	r0, [pc, #80]	; (8000b64 <main+0x3dc>)
 8000b12:	f7ff fe06 	bl	8000722 <LL_GPIO_SetOutputPin>
 8000b16:	e00a      	b.n	8000b2e <main+0x3a6>
			else
				LL_GPIO_ResetOutputPin(LO_GPIO_Port, LO_Pin);
 8000b18:	f240 4104 	movw	r1, #1028	; 0x404
 8000b1c:	4811      	ldr	r0, [pc, #68]	; (8000b64 <main+0x3dc>)
 8000b1e:	f7ff fe0f 	bl	8000740 <LL_GPIO_ResetOutputPin>
 8000b22:	e004      	b.n	8000b2e <main+0x3a6>
		}else{
			LL_GPIO_ResetOutputPin(LO_GPIO_Port, LO_Pin);
 8000b24:	f240 4104 	movw	r1, #1028	; 0x404
 8000b28:	480e      	ldr	r0, [pc, #56]	; (8000b64 <main+0x3dc>)
 8000b2a:	f7ff fe09 	bl	8000740 <LL_GPIO_ResetOutputPin>
		}


		if(G||S){
 8000b2e:	4b10      	ldr	r3, [pc, #64]	; (8000b70 <main+0x3e8>)
 8000b30:	781b      	ldrb	r3, [r3, #0]
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	d103      	bne.n	8000b3e <main+0x3b6>
 8000b36:	4b12      	ldr	r3, [pc, #72]	; (8000b80 <main+0x3f8>)
 8000b38:	781b      	ldrb	r3, [r3, #0]
 8000b3a:	2b00      	cmp	r3, #0
 8000b3c:	d004      	beq.n	8000b48 <main+0x3c0>
			LL_GPIO_ResetOutputPin(led_GPIO_Port, led_Pin);
 8000b3e:	4911      	ldr	r1, [pc, #68]	; (8000b84 <main+0x3fc>)
 8000b40:	4811      	ldr	r0, [pc, #68]	; (8000b88 <main+0x400>)
 8000b42:	f7ff fdfd 	bl	8000740 <LL_GPIO_ResetOutputPin>
 8000b46:	e003      	b.n	8000b50 <main+0x3c8>
		}else{
			LL_GPIO_SetOutputPin(led_GPIO_Port, led_Pin);
 8000b48:	490e      	ldr	r1, [pc, #56]	; (8000b84 <main+0x3fc>)
 8000b4a:	480f      	ldr	r0, [pc, #60]	; (8000b88 <main+0x400>)
 8000b4c:	f7ff fde9 	bl	8000722 <LL_GPIO_SetOutputPin>
		//			uscnt=0;
		//			LL_GPIO_TogglePin(LO_GPIO_Port, LO_Pin);
		//		}
		//		while(Ocnt==Wcnt);//one ms for while
		//	Ocnt=Wcnt;
		Wcnt++;
 8000b50:	4b09      	ldr	r3, [pc, #36]	; (8000b78 <main+0x3f0>)
 8000b52:	681b      	ldr	r3, [r3, #0]
 8000b54:	3301      	adds	r3, #1
 8000b56:	4a08      	ldr	r2, [pc, #32]	; (8000b78 <main+0x3f0>)
 8000b58:	6013      	str	r3, [r2, #0]
		show_n(nn, 0);
 8000b5a:	e655      	b.n	8000808 <main+0x80>
 8000b5c:	2000002c 	.word	0x2000002c
 8000b60:	20000036 	.word	0x20000036
 8000b64:	40010800 	.word	0x40010800
 8000b68:	20000038 	.word	0x20000038
 8000b6c:	20000030 	.word	0x20000030
 8000b70:	20000032 	.word	0x20000032
 8000b74:	20000033 	.word	0x20000033
 8000b78:	20000028 	.word	0x20000028
 8000b7c:	aaaaaaab 	.word	0xaaaaaaab
 8000b80:	20000034 	.word	0x20000034
 8000b84:	04020002 	.word	0x04020002
 8000b88:	40010c00 	.word	0x40010c00

08000b8c <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 8000b8c:	b580      	push	{r7, lr}
 8000b8e:	af00      	add	r7, sp, #0
	LL_FLASH_SetLatency(LL_FLASH_LATENCY_2);
 8000b90:	2002      	movs	r0, #2
 8000b92:	f7ff fd7d 	bl	8000690 <LL_FLASH_SetLatency>
	while(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_2)
 8000b96:	bf00      	nop
 8000b98:	f7ff fd8e 	bl	80006b8 <LL_FLASH_GetLatency>
 8000b9c:	4603      	mov	r3, r0
 8000b9e:	2b02      	cmp	r3, #2
 8000ba0:	d1fa      	bne.n	8000b98 <SystemClock_Config+0xc>
	{
	}
	LL_RCC_HSI_SetCalibTrimming(16);
 8000ba2:	2010      	movs	r0, #16
 8000ba4:	f7ff fc9c 	bl	80004e0 <LL_RCC_HSI_SetCalibTrimming>
	LL_RCC_HSI_Enable();
 8000ba8:	f7ff fc7a 	bl	80004a0 <LL_RCC_HSI_Enable>

	/* Wait till HSI is ready */
	while(LL_RCC_HSI_IsReady() != 1)
 8000bac:	bf00      	nop
 8000bae:	f7ff fc85 	bl	80004bc <LL_RCC_HSI_IsReady>
 8000bb2:	4603      	mov	r3, r0
 8000bb4:	2b01      	cmp	r3, #1
 8000bb6:	d1fa      	bne.n	8000bae <SystemClock_Config+0x22>
	{

	}
	LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI_DIV_2, LL_RCC_PLL_MUL_16);
 8000bb8:	f44f 1160 	mov.w	r1, #3670016	; 0x380000
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	f7ff fd1f 	bl	8000600 <LL_RCC_PLL_ConfigDomain_SYS>
	LL_RCC_PLL_Enable();
 8000bc2:	f7ff fcfd 	bl	80005c0 <LL_RCC_PLL_Enable>

	/* Wait till PLL is ready */
	while(LL_RCC_PLL_IsReady() != 1)
 8000bc6:	bf00      	nop
 8000bc8:	f7ff fd08 	bl	80005dc <LL_RCC_PLL_IsReady>
 8000bcc:	4603      	mov	r3, r0
 8000bce:	2b01      	cmp	r3, #1
 8000bd0:	d1fa      	bne.n	8000bc8 <SystemClock_Config+0x3c>
	{

	}
	LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 8000bd2:	2000      	movs	r0, #0
 8000bd4:	f7ff fcb8 	bl	8000548 <LL_RCC_SetAHBPrescaler>
	LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_2);
 8000bd8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8000bdc:	f7ff fcc8 	bl	8000570 <LL_RCC_SetAPB1Prescaler>
	LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 8000be0:	2000      	movs	r0, #0
 8000be2:	f7ff fcd9 	bl	8000598 <LL_RCC_SetAPB2Prescaler>
	LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 8000be6:	2002      	movs	r0, #2
 8000be8:	f7ff fc8e 	bl	8000508 <LL_RCC_SetSysClkSource>

	/* Wait till System clock is ready */
	while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 8000bec:	bf00      	nop
 8000bee:	f7ff fc9f 	bl	8000530 <LL_RCC_GetSysClkSource>
 8000bf2:	4603      	mov	r3, r0
 8000bf4:	2b08      	cmp	r3, #8
 8000bf6:	d1fa      	bne.n	8000bee <SystemClock_Config+0x62>
	{

	}
	LL_Init1msTick(64000000);
 8000bf8:	4803      	ldr	r0, [pc, #12]	; (8000c08 <SystemClock_Config+0x7c>)
 8000bfa:	f000 fe91 	bl	8001920 <LL_Init1msTick>
	LL_SetSystemCoreClock(64000000);
 8000bfe:	4802      	ldr	r0, [pc, #8]	; (8000c08 <SystemClock_Config+0x7c>)
 8000c00:	f000 fec0 	bl	8001984 <LL_SetSystemCoreClock>
}
 8000c04:	bf00      	nop
 8000c06:	bd80      	pop	{r7, pc}
 8000c08:	03d09000 	.word	0x03d09000

08000c0c <show_n>:

/* USER CODE BEGIN 4 */
void show_n(uint8_t n,_Bool q){
 8000c0c:	b580      	push	{r7, lr}
 8000c0e:	b084      	sub	sp, #16
 8000c10:	af00      	add	r7, sp, #0
 8000c12:	4603      	mov	r3, r0
 8000c14:	460a      	mov	r2, r1
 8000c16:	71fb      	strb	r3, [r7, #7]
 8000c18:	4613      	mov	r3, r2
 8000c1a:	71bb      	strb	r3, [r7, #6]
	uint8_t b=0;
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	73fb      	strb	r3, [r7, #15]
	if(q)
 8000c20:	79bb      	ldrb	r3, [r7, #6]
 8000c22:	2b00      	cmp	r3, #0
 8000c24:	d013      	beq.n	8000c4e <show_n+0x42>
	{
		b=n%10;
 8000c26:	79fa      	ldrb	r2, [r7, #7]
 8000c28:	4ba5      	ldr	r3, [pc, #660]	; (8000ec0 <show_n+0x2b4>)
 8000c2a:	fba3 1302 	umull	r1, r3, r3, r2
 8000c2e:	08d9      	lsrs	r1, r3, #3
 8000c30:	460b      	mov	r3, r1
 8000c32:	009b      	lsls	r3, r3, #2
 8000c34:	440b      	add	r3, r1
 8000c36:	005b      	lsls	r3, r3, #1
 8000c38:	1ad3      	subs	r3, r2, r3
 8000c3a:	73fb      	strb	r3, [r7, #15]
		LL_GPIO_SetOutputPin(yo_GPIO_Port, yo_Pin);
 8000c3c:	49a1      	ldr	r1, [pc, #644]	; (8000ec4 <show_n+0x2b8>)
 8000c3e:	48a2      	ldr	r0, [pc, #648]	; (8000ec8 <show_n+0x2bc>)
 8000c40:	f7ff fd6f 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(do_GPIO_Port, do_Pin);
 8000c44:	49a1      	ldr	r1, [pc, #644]	; (8000ecc <show_n+0x2c0>)
 8000c46:	48a0      	ldr	r0, [pc, #640]	; (8000ec8 <show_n+0x2bc>)
 8000c48:	f7ff fd7a 	bl	8000740 <LL_GPIO_ResetOutputPin>
 8000c4c:	e017      	b.n	8000c7e <show_n+0x72>
	}else{
		b=(n/10)%10;
 8000c4e:	79fb      	ldrb	r3, [r7, #7]
 8000c50:	4a9b      	ldr	r2, [pc, #620]	; (8000ec0 <show_n+0x2b4>)
 8000c52:	fba2 2303 	umull	r2, r3, r2, r3
 8000c56:	08db      	lsrs	r3, r3, #3
 8000c58:	b2da      	uxtb	r2, r3
 8000c5a:	4b99      	ldr	r3, [pc, #612]	; (8000ec0 <show_n+0x2b4>)
 8000c5c:	fba3 1302 	umull	r1, r3, r3, r2
 8000c60:	08d9      	lsrs	r1, r3, #3
 8000c62:	460b      	mov	r3, r1
 8000c64:	009b      	lsls	r3, r3, #2
 8000c66:	440b      	add	r3, r1
 8000c68:	005b      	lsls	r3, r3, #1
 8000c6a:	1ad3      	subs	r3, r2, r3
 8000c6c:	73fb      	strb	r3, [r7, #15]
		LL_GPIO_ResetOutputPin(yo_GPIO_Port, yo_Pin);
 8000c6e:	4995      	ldr	r1, [pc, #596]	; (8000ec4 <show_n+0x2b8>)
 8000c70:	4895      	ldr	r0, [pc, #596]	; (8000ec8 <show_n+0x2bc>)
 8000c72:	f7ff fd65 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(do_GPIO_Port, do_Pin);
 8000c76:	4995      	ldr	r1, [pc, #596]	; (8000ecc <show_n+0x2c0>)
 8000c78:	4893      	ldr	r0, [pc, #588]	; (8000ec8 <show_n+0x2bc>)
 8000c7a:	f7ff fd52 	bl	8000722 <LL_GPIO_SetOutputPin>
	}
	switch(b){
 8000c7e:	7bfb      	ldrb	r3, [r7, #15]
 8000c80:	2b09      	cmp	r3, #9
 8000c82:	f200 8150 	bhi.w	8000f26 <show_n+0x31a>
 8000c86:	a201      	add	r2, pc, #4	; (adr r2, 8000c8c <show_n+0x80>)
 8000c88:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c8c:	08000cb5 	.word	0x08000cb5
 8000c90:	08000cef 	.word	0x08000cef
 8000c94:	08000d29 	.word	0x08000d29
 8000c98:	08000d63 	.word	0x08000d63
 8000c9c:	08000d9d 	.word	0x08000d9d
 8000ca0:	08000dd7 	.word	0x08000dd7
 8000ca4:	08000e11 	.word	0x08000e11
 8000ca8:	08000e4b 	.word	0x08000e4b
 8000cac:	08000e85 	.word	0x08000e85
 8000cb0:	08000eed 	.word	0x08000eed
	case 0:
		LL_GPIO_SetOutputPin(a_GPIO_Port, a_Pin);
 8000cb4:	4983      	ldr	r1, [pc, #524]	; (8000ec4 <show_n+0x2b8>)
 8000cb6:	4886      	ldr	r0, [pc, #536]	; (8000ed0 <show_n+0x2c4>)
 8000cb8:	f7ff fd33 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(b_GPIO_Port, b_Pin);
 8000cbc:	4985      	ldr	r1, [pc, #532]	; (8000ed4 <show_n+0x2c8>)
 8000cbe:	4884      	ldr	r0, [pc, #528]	; (8000ed0 <show_n+0x2c4>)
 8000cc0:	f7ff fd2f 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000cc4:	4984      	ldr	r1, [pc, #528]	; (8000ed8 <show_n+0x2cc>)
 8000cc6:	4882      	ldr	r0, [pc, #520]	; (8000ed0 <show_n+0x2c4>)
 8000cc8:	f7ff fd2b 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(d_GPIO_Port, d_Pin);
 8000ccc:	4983      	ldr	r1, [pc, #524]	; (8000edc <show_n+0x2d0>)
 8000cce:	487e      	ldr	r0, [pc, #504]	; (8000ec8 <show_n+0x2bc>)
 8000cd0:	f7ff fd27 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(e_GPIO_Port, e_Pin);
 8000cd4:	4982      	ldr	r1, [pc, #520]	; (8000ee0 <show_n+0x2d4>)
 8000cd6:	487c      	ldr	r0, [pc, #496]	; (8000ec8 <show_n+0x2bc>)
 8000cd8:	f7ff fd23 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(f_GPIO_Port, f_Pin);
 8000cdc:	4981      	ldr	r1, [pc, #516]	; (8000ee4 <show_n+0x2d8>)
 8000cde:	487c      	ldr	r0, [pc, #496]	; (8000ed0 <show_n+0x2c4>)
 8000ce0:	f7ff fd1f 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(g_GPIO_Port, g_Pin);
 8000ce4:	4980      	ldr	r1, [pc, #512]	; (8000ee8 <show_n+0x2dc>)
 8000ce6:	4878      	ldr	r0, [pc, #480]	; (8000ec8 <show_n+0x2bc>)
 8000ce8:	f7ff fd2a 	bl	8000740 <LL_GPIO_ResetOutputPin>
		break;
 8000cec:	e11b      	b.n	8000f26 <show_n+0x31a>
	case 1:
		LL_GPIO_ResetOutputPin(a_GPIO_Port, a_Pin);
 8000cee:	4975      	ldr	r1, [pc, #468]	; (8000ec4 <show_n+0x2b8>)
 8000cf0:	4877      	ldr	r0, [pc, #476]	; (8000ed0 <show_n+0x2c4>)
 8000cf2:	f7ff fd25 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(b_GPIO_Port, b_Pin);
 8000cf6:	4977      	ldr	r1, [pc, #476]	; (8000ed4 <show_n+0x2c8>)
 8000cf8:	4875      	ldr	r0, [pc, #468]	; (8000ed0 <show_n+0x2c4>)
 8000cfa:	f7ff fd12 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000cfe:	4976      	ldr	r1, [pc, #472]	; (8000ed8 <show_n+0x2cc>)
 8000d00:	4873      	ldr	r0, [pc, #460]	; (8000ed0 <show_n+0x2c4>)
 8000d02:	f7ff fd0e 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(d_GPIO_Port, d_Pin);
 8000d06:	4975      	ldr	r1, [pc, #468]	; (8000edc <show_n+0x2d0>)
 8000d08:	486f      	ldr	r0, [pc, #444]	; (8000ec8 <show_n+0x2bc>)
 8000d0a:	f7ff fd19 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_ResetOutputPin(e_GPIO_Port, e_Pin);
 8000d0e:	4974      	ldr	r1, [pc, #464]	; (8000ee0 <show_n+0x2d4>)
 8000d10:	486d      	ldr	r0, [pc, #436]	; (8000ec8 <show_n+0x2bc>)
 8000d12:	f7ff fd15 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_ResetOutputPin(f_GPIO_Port, f_Pin);
 8000d16:	4973      	ldr	r1, [pc, #460]	; (8000ee4 <show_n+0x2d8>)
 8000d18:	486d      	ldr	r0, [pc, #436]	; (8000ed0 <show_n+0x2c4>)
 8000d1a:	f7ff fd11 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_ResetOutputPin(g_GPIO_Port, g_Pin);
 8000d1e:	4972      	ldr	r1, [pc, #456]	; (8000ee8 <show_n+0x2dc>)
 8000d20:	4869      	ldr	r0, [pc, #420]	; (8000ec8 <show_n+0x2bc>)
 8000d22:	f7ff fd0d 	bl	8000740 <LL_GPIO_ResetOutputPin>
		break;
 8000d26:	e0fe      	b.n	8000f26 <show_n+0x31a>
	case 2:
		LL_GPIO_SetOutputPin(a_GPIO_Port, a_Pin);
 8000d28:	4966      	ldr	r1, [pc, #408]	; (8000ec4 <show_n+0x2b8>)
 8000d2a:	4869      	ldr	r0, [pc, #420]	; (8000ed0 <show_n+0x2c4>)
 8000d2c:	f7ff fcf9 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(b_GPIO_Port, b_Pin);
 8000d30:	4968      	ldr	r1, [pc, #416]	; (8000ed4 <show_n+0x2c8>)
 8000d32:	4867      	ldr	r0, [pc, #412]	; (8000ed0 <show_n+0x2c4>)
 8000d34:	f7ff fcf5 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(c_GPIO_Port, c_Pin);
 8000d38:	4967      	ldr	r1, [pc, #412]	; (8000ed8 <show_n+0x2cc>)
 8000d3a:	4865      	ldr	r0, [pc, #404]	; (8000ed0 <show_n+0x2c4>)
 8000d3c:	f7ff fd00 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(d_GPIO_Port, d_Pin);
 8000d40:	4966      	ldr	r1, [pc, #408]	; (8000edc <show_n+0x2d0>)
 8000d42:	4861      	ldr	r0, [pc, #388]	; (8000ec8 <show_n+0x2bc>)
 8000d44:	f7ff fced 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(e_GPIO_Port, e_Pin);
 8000d48:	4965      	ldr	r1, [pc, #404]	; (8000ee0 <show_n+0x2d4>)
 8000d4a:	485f      	ldr	r0, [pc, #380]	; (8000ec8 <show_n+0x2bc>)
 8000d4c:	f7ff fce9 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(f_GPIO_Port, f_Pin);
 8000d50:	4964      	ldr	r1, [pc, #400]	; (8000ee4 <show_n+0x2d8>)
 8000d52:	485f      	ldr	r0, [pc, #380]	; (8000ed0 <show_n+0x2c4>)
 8000d54:	f7ff fcf4 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(g_GPIO_Port, g_Pin);
 8000d58:	4963      	ldr	r1, [pc, #396]	; (8000ee8 <show_n+0x2dc>)
 8000d5a:	485b      	ldr	r0, [pc, #364]	; (8000ec8 <show_n+0x2bc>)
 8000d5c:	f7ff fce1 	bl	8000722 <LL_GPIO_SetOutputPin>
		break;
 8000d60:	e0e1      	b.n	8000f26 <show_n+0x31a>
	case 3:
		LL_GPIO_SetOutputPin(a_GPIO_Port, a_Pin);
 8000d62:	4958      	ldr	r1, [pc, #352]	; (8000ec4 <show_n+0x2b8>)
 8000d64:	485a      	ldr	r0, [pc, #360]	; (8000ed0 <show_n+0x2c4>)
 8000d66:	f7ff fcdc 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(b_GPIO_Port, b_Pin);
 8000d6a:	495a      	ldr	r1, [pc, #360]	; (8000ed4 <show_n+0x2c8>)
 8000d6c:	4858      	ldr	r0, [pc, #352]	; (8000ed0 <show_n+0x2c4>)
 8000d6e:	f7ff fcd8 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000d72:	4959      	ldr	r1, [pc, #356]	; (8000ed8 <show_n+0x2cc>)
 8000d74:	4856      	ldr	r0, [pc, #344]	; (8000ed0 <show_n+0x2c4>)
 8000d76:	f7ff fcd4 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(d_GPIO_Port, d_Pin);
 8000d7a:	4958      	ldr	r1, [pc, #352]	; (8000edc <show_n+0x2d0>)
 8000d7c:	4852      	ldr	r0, [pc, #328]	; (8000ec8 <show_n+0x2bc>)
 8000d7e:	f7ff fcd0 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(e_GPIO_Port, e_Pin);
 8000d82:	4957      	ldr	r1, [pc, #348]	; (8000ee0 <show_n+0x2d4>)
 8000d84:	4850      	ldr	r0, [pc, #320]	; (8000ec8 <show_n+0x2bc>)
 8000d86:	f7ff fcdb 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_ResetOutputPin(f_GPIO_Port, f_Pin);
 8000d8a:	4956      	ldr	r1, [pc, #344]	; (8000ee4 <show_n+0x2d8>)
 8000d8c:	4850      	ldr	r0, [pc, #320]	; (8000ed0 <show_n+0x2c4>)
 8000d8e:	f7ff fcd7 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(g_GPIO_Port, g_Pin);
 8000d92:	4955      	ldr	r1, [pc, #340]	; (8000ee8 <show_n+0x2dc>)
 8000d94:	484c      	ldr	r0, [pc, #304]	; (8000ec8 <show_n+0x2bc>)
 8000d96:	f7ff fcc4 	bl	8000722 <LL_GPIO_SetOutputPin>
		break;
 8000d9a:	e0c4      	b.n	8000f26 <show_n+0x31a>
	case 4:
		LL_GPIO_ResetOutputPin(a_GPIO_Port, a_Pin);
 8000d9c:	4949      	ldr	r1, [pc, #292]	; (8000ec4 <show_n+0x2b8>)
 8000d9e:	484c      	ldr	r0, [pc, #304]	; (8000ed0 <show_n+0x2c4>)
 8000da0:	f7ff fcce 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(b_GPIO_Port, b_Pin);
 8000da4:	494b      	ldr	r1, [pc, #300]	; (8000ed4 <show_n+0x2c8>)
 8000da6:	484a      	ldr	r0, [pc, #296]	; (8000ed0 <show_n+0x2c4>)
 8000da8:	f7ff fcbb 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000dac:	494a      	ldr	r1, [pc, #296]	; (8000ed8 <show_n+0x2cc>)
 8000dae:	4848      	ldr	r0, [pc, #288]	; (8000ed0 <show_n+0x2c4>)
 8000db0:	f7ff fcb7 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(d_GPIO_Port, d_Pin);
 8000db4:	4949      	ldr	r1, [pc, #292]	; (8000edc <show_n+0x2d0>)
 8000db6:	4844      	ldr	r0, [pc, #272]	; (8000ec8 <show_n+0x2bc>)
 8000db8:	f7ff fcc2 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_ResetOutputPin(e_GPIO_Port, e_Pin);
 8000dbc:	4948      	ldr	r1, [pc, #288]	; (8000ee0 <show_n+0x2d4>)
 8000dbe:	4842      	ldr	r0, [pc, #264]	; (8000ec8 <show_n+0x2bc>)
 8000dc0:	f7ff fcbe 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(f_GPIO_Port, f_Pin);
 8000dc4:	4947      	ldr	r1, [pc, #284]	; (8000ee4 <show_n+0x2d8>)
 8000dc6:	4842      	ldr	r0, [pc, #264]	; (8000ed0 <show_n+0x2c4>)
 8000dc8:	f7ff fcab 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(g_GPIO_Port, g_Pin);
 8000dcc:	4946      	ldr	r1, [pc, #280]	; (8000ee8 <show_n+0x2dc>)
 8000dce:	483e      	ldr	r0, [pc, #248]	; (8000ec8 <show_n+0x2bc>)
 8000dd0:	f7ff fca7 	bl	8000722 <LL_GPIO_SetOutputPin>
		break;
 8000dd4:	e0a7      	b.n	8000f26 <show_n+0x31a>
	case 5:
		LL_GPIO_SetOutputPin(a_GPIO_Port, a_Pin);
 8000dd6:	493b      	ldr	r1, [pc, #236]	; (8000ec4 <show_n+0x2b8>)
 8000dd8:	483d      	ldr	r0, [pc, #244]	; (8000ed0 <show_n+0x2c4>)
 8000dda:	f7ff fca2 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(b_GPIO_Port, b_Pin);
 8000dde:	493d      	ldr	r1, [pc, #244]	; (8000ed4 <show_n+0x2c8>)
 8000de0:	483b      	ldr	r0, [pc, #236]	; (8000ed0 <show_n+0x2c4>)
 8000de2:	f7ff fcad 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000de6:	493c      	ldr	r1, [pc, #240]	; (8000ed8 <show_n+0x2cc>)
 8000de8:	4839      	ldr	r0, [pc, #228]	; (8000ed0 <show_n+0x2c4>)
 8000dea:	f7ff fc9a 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(d_GPIO_Port, d_Pin);
 8000dee:	493b      	ldr	r1, [pc, #236]	; (8000edc <show_n+0x2d0>)
 8000df0:	4835      	ldr	r0, [pc, #212]	; (8000ec8 <show_n+0x2bc>)
 8000df2:	f7ff fc96 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(e_GPIO_Port, e_Pin);
 8000df6:	493a      	ldr	r1, [pc, #232]	; (8000ee0 <show_n+0x2d4>)
 8000df8:	4833      	ldr	r0, [pc, #204]	; (8000ec8 <show_n+0x2bc>)
 8000dfa:	f7ff fca1 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(f_GPIO_Port, f_Pin);
 8000dfe:	4939      	ldr	r1, [pc, #228]	; (8000ee4 <show_n+0x2d8>)
 8000e00:	4833      	ldr	r0, [pc, #204]	; (8000ed0 <show_n+0x2c4>)
 8000e02:	f7ff fc8e 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(g_GPIO_Port, g_Pin);
 8000e06:	4938      	ldr	r1, [pc, #224]	; (8000ee8 <show_n+0x2dc>)
 8000e08:	482f      	ldr	r0, [pc, #188]	; (8000ec8 <show_n+0x2bc>)
 8000e0a:	f7ff fc8a 	bl	8000722 <LL_GPIO_SetOutputPin>
		break;
 8000e0e:	e08a      	b.n	8000f26 <show_n+0x31a>
	case 6:
		LL_GPIO_SetOutputPin(a_GPIO_Port, a_Pin);
 8000e10:	492c      	ldr	r1, [pc, #176]	; (8000ec4 <show_n+0x2b8>)
 8000e12:	482f      	ldr	r0, [pc, #188]	; (8000ed0 <show_n+0x2c4>)
 8000e14:	f7ff fc85 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(b_GPIO_Port, b_Pin);
 8000e18:	492e      	ldr	r1, [pc, #184]	; (8000ed4 <show_n+0x2c8>)
 8000e1a:	482d      	ldr	r0, [pc, #180]	; (8000ed0 <show_n+0x2c4>)
 8000e1c:	f7ff fc90 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000e20:	492d      	ldr	r1, [pc, #180]	; (8000ed8 <show_n+0x2cc>)
 8000e22:	482b      	ldr	r0, [pc, #172]	; (8000ed0 <show_n+0x2c4>)
 8000e24:	f7ff fc7d 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(d_GPIO_Port, d_Pin);
 8000e28:	492c      	ldr	r1, [pc, #176]	; (8000edc <show_n+0x2d0>)
 8000e2a:	4827      	ldr	r0, [pc, #156]	; (8000ec8 <show_n+0x2bc>)
 8000e2c:	f7ff fc79 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(e_GPIO_Port, e_Pin);
 8000e30:	492b      	ldr	r1, [pc, #172]	; (8000ee0 <show_n+0x2d4>)
 8000e32:	4825      	ldr	r0, [pc, #148]	; (8000ec8 <show_n+0x2bc>)
 8000e34:	f7ff fc75 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(f_GPIO_Port, f_Pin);
 8000e38:	492a      	ldr	r1, [pc, #168]	; (8000ee4 <show_n+0x2d8>)
 8000e3a:	4825      	ldr	r0, [pc, #148]	; (8000ed0 <show_n+0x2c4>)
 8000e3c:	f7ff fc71 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(g_GPIO_Port, g_Pin);
 8000e40:	4929      	ldr	r1, [pc, #164]	; (8000ee8 <show_n+0x2dc>)
 8000e42:	4821      	ldr	r0, [pc, #132]	; (8000ec8 <show_n+0x2bc>)
 8000e44:	f7ff fc6d 	bl	8000722 <LL_GPIO_SetOutputPin>
		break;
 8000e48:	e06d      	b.n	8000f26 <show_n+0x31a>
	case 7:
		LL_GPIO_SetOutputPin(a_GPIO_Port, a_Pin);
 8000e4a:	491e      	ldr	r1, [pc, #120]	; (8000ec4 <show_n+0x2b8>)
 8000e4c:	4820      	ldr	r0, [pc, #128]	; (8000ed0 <show_n+0x2c4>)
 8000e4e:	f7ff fc68 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(b_GPIO_Port, b_Pin);
 8000e52:	4920      	ldr	r1, [pc, #128]	; (8000ed4 <show_n+0x2c8>)
 8000e54:	481e      	ldr	r0, [pc, #120]	; (8000ed0 <show_n+0x2c4>)
 8000e56:	f7ff fc64 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000e5a:	491f      	ldr	r1, [pc, #124]	; (8000ed8 <show_n+0x2cc>)
 8000e5c:	481c      	ldr	r0, [pc, #112]	; (8000ed0 <show_n+0x2c4>)
 8000e5e:	f7ff fc60 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(d_GPIO_Port, d_Pin);
 8000e62:	491e      	ldr	r1, [pc, #120]	; (8000edc <show_n+0x2d0>)
 8000e64:	4818      	ldr	r0, [pc, #96]	; (8000ec8 <show_n+0x2bc>)
 8000e66:	f7ff fc6b 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_ResetOutputPin(e_GPIO_Port, e_Pin);
 8000e6a:	491d      	ldr	r1, [pc, #116]	; (8000ee0 <show_n+0x2d4>)
 8000e6c:	4816      	ldr	r0, [pc, #88]	; (8000ec8 <show_n+0x2bc>)
 8000e6e:	f7ff fc67 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_ResetOutputPin(f_GPIO_Port, f_Pin);
 8000e72:	491c      	ldr	r1, [pc, #112]	; (8000ee4 <show_n+0x2d8>)
 8000e74:	4816      	ldr	r0, [pc, #88]	; (8000ed0 <show_n+0x2c4>)
 8000e76:	f7ff fc63 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_ResetOutputPin(g_GPIO_Port, g_Pin);
 8000e7a:	491b      	ldr	r1, [pc, #108]	; (8000ee8 <show_n+0x2dc>)
 8000e7c:	4812      	ldr	r0, [pc, #72]	; (8000ec8 <show_n+0x2bc>)
 8000e7e:	f7ff fc5f 	bl	8000740 <LL_GPIO_ResetOutputPin>
		break;
 8000e82:	e050      	b.n	8000f26 <show_n+0x31a>
	case 8:
		LL_GPIO_SetOutputPin(a_GPIO_Port, a_Pin);
 8000e84:	490f      	ldr	r1, [pc, #60]	; (8000ec4 <show_n+0x2b8>)
 8000e86:	4812      	ldr	r0, [pc, #72]	; (8000ed0 <show_n+0x2c4>)
 8000e88:	f7ff fc4b 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(b_GPIO_Port, b_Pin);
 8000e8c:	4911      	ldr	r1, [pc, #68]	; (8000ed4 <show_n+0x2c8>)
 8000e8e:	4810      	ldr	r0, [pc, #64]	; (8000ed0 <show_n+0x2c4>)
 8000e90:	f7ff fc47 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000e94:	4910      	ldr	r1, [pc, #64]	; (8000ed8 <show_n+0x2cc>)
 8000e96:	480e      	ldr	r0, [pc, #56]	; (8000ed0 <show_n+0x2c4>)
 8000e98:	f7ff fc43 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(d_GPIO_Port, d_Pin);
 8000e9c:	490f      	ldr	r1, [pc, #60]	; (8000edc <show_n+0x2d0>)
 8000e9e:	480a      	ldr	r0, [pc, #40]	; (8000ec8 <show_n+0x2bc>)
 8000ea0:	f7ff fc3f 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(e_GPIO_Port, e_Pin);
 8000ea4:	490e      	ldr	r1, [pc, #56]	; (8000ee0 <show_n+0x2d4>)
 8000ea6:	4808      	ldr	r0, [pc, #32]	; (8000ec8 <show_n+0x2bc>)
 8000ea8:	f7ff fc3b 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(f_GPIO_Port, f_Pin);
 8000eac:	490d      	ldr	r1, [pc, #52]	; (8000ee4 <show_n+0x2d8>)
 8000eae:	4808      	ldr	r0, [pc, #32]	; (8000ed0 <show_n+0x2c4>)
 8000eb0:	f7ff fc37 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(g_GPIO_Port, g_Pin);
 8000eb4:	490c      	ldr	r1, [pc, #48]	; (8000ee8 <show_n+0x2dc>)
 8000eb6:	4804      	ldr	r0, [pc, #16]	; (8000ec8 <show_n+0x2bc>)
 8000eb8:	f7ff fc33 	bl	8000722 <LL_GPIO_SetOutputPin>
		break;
 8000ebc:	e033      	b.n	8000f26 <show_n+0x31a>
 8000ebe:	bf00      	nop
 8000ec0:	cccccccd 	.word	0xcccccccd
 8000ec4:	04100010 	.word	0x04100010
 8000ec8:	40010800 	.word	0x40010800
 8000ecc:	04080008 	.word	0x04080008
 8000ed0:	40010c00 	.word	0x40010c00
 8000ed4:	04400040 	.word	0x04400040
 8000ed8:	04200020 	.word	0x04200020
 8000edc:	04010001 	.word	0x04010001
 8000ee0:	04020002 	.word	0x04020002
 8000ee4:	04800080 	.word	0x04800080
 8000ee8:	04040004 	.word	0x04040004
	case 9:
		LL_GPIO_SetOutputPin(a_GPIO_Port, a_Pin);
 8000eec:	4910      	ldr	r1, [pc, #64]	; (8000f30 <show_n+0x324>)
 8000eee:	4811      	ldr	r0, [pc, #68]	; (8000f34 <show_n+0x328>)
 8000ef0:	f7ff fc17 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(b_GPIO_Port, b_Pin);
 8000ef4:	4910      	ldr	r1, [pc, #64]	; (8000f38 <show_n+0x32c>)
 8000ef6:	480f      	ldr	r0, [pc, #60]	; (8000f34 <show_n+0x328>)
 8000ef8:	f7ff fc13 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(c_GPIO_Port, c_Pin);
 8000efc:	490f      	ldr	r1, [pc, #60]	; (8000f3c <show_n+0x330>)
 8000efe:	480d      	ldr	r0, [pc, #52]	; (8000f34 <show_n+0x328>)
 8000f00:	f7ff fc0f 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(d_GPIO_Port, d_Pin);
 8000f04:	490e      	ldr	r1, [pc, #56]	; (8000f40 <show_n+0x334>)
 8000f06:	480f      	ldr	r0, [pc, #60]	; (8000f44 <show_n+0x338>)
 8000f08:	f7ff fc0b 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_ResetOutputPin(e_GPIO_Port, e_Pin);
 8000f0c:	490e      	ldr	r1, [pc, #56]	; (8000f48 <show_n+0x33c>)
 8000f0e:	480d      	ldr	r0, [pc, #52]	; (8000f44 <show_n+0x338>)
 8000f10:	f7ff fc16 	bl	8000740 <LL_GPIO_ResetOutputPin>
		LL_GPIO_SetOutputPin(f_GPIO_Port, f_Pin);
 8000f14:	490d      	ldr	r1, [pc, #52]	; (8000f4c <show_n+0x340>)
 8000f16:	4807      	ldr	r0, [pc, #28]	; (8000f34 <show_n+0x328>)
 8000f18:	f7ff fc03 	bl	8000722 <LL_GPIO_SetOutputPin>
		LL_GPIO_SetOutputPin(g_GPIO_Port, g_Pin);
 8000f1c:	490c      	ldr	r1, [pc, #48]	; (8000f50 <show_n+0x344>)
 8000f1e:	4809      	ldr	r0, [pc, #36]	; (8000f44 <show_n+0x338>)
 8000f20:	f7ff fbff 	bl	8000722 <LL_GPIO_SetOutputPin>
		break;
 8000f24:	bf00      	nop
	}

}
 8000f26:	bf00      	nop
 8000f28:	3710      	adds	r7, #16
 8000f2a:	46bd      	mov	sp, r7
 8000f2c:	bd80      	pop	{r7, pc}
 8000f2e:	bf00      	nop
 8000f30:	04100010 	.word	0x04100010
 8000f34:	40010c00 	.word	0x40010c00
 8000f38:	04400040 	.word	0x04400040
 8000f3c:	04200020 	.word	0x04200020
 8000f40:	04010001 	.word	0x04010001
 8000f44:	40010800 	.word	0x40010800
 8000f48:	04020002 	.word	0x04020002
 8000f4c:	04800080 	.word	0x04800080
 8000f50:	04040004 	.word	0x04040004

08000f54 <LL_EXTI_IsActiveFlag_0_31>:
 8000f54:	b480      	push	{r7}
 8000f56:	b083      	sub	sp, #12
 8000f58:	af00      	add	r7, sp, #0
 8000f5a:	6078      	str	r0, [r7, #4]
 8000f5c:	4b07      	ldr	r3, [pc, #28]	; (8000f7c <LL_EXTI_IsActiveFlag_0_31+0x28>)
 8000f5e:	695a      	ldr	r2, [r3, #20]
 8000f60:	687b      	ldr	r3, [r7, #4]
 8000f62:	4013      	ands	r3, r2
 8000f64:	687a      	ldr	r2, [r7, #4]
 8000f66:	429a      	cmp	r2, r3
 8000f68:	bf0c      	ite	eq
 8000f6a:	2301      	moveq	r3, #1
 8000f6c:	2300      	movne	r3, #0
 8000f6e:	b2db      	uxtb	r3, r3
 8000f70:	4618      	mov	r0, r3
 8000f72:	370c      	adds	r7, #12
 8000f74:	46bd      	mov	sp, r7
 8000f76:	bc80      	pop	{r7}
 8000f78:	4770      	bx	lr
 8000f7a:	bf00      	nop
 8000f7c:	40010400 	.word	0x40010400

08000f80 <LL_EXTI_ClearFlag_0_31>:
 8000f80:	b480      	push	{r7}
 8000f82:	b083      	sub	sp, #12
 8000f84:	af00      	add	r7, sp, #0
 8000f86:	6078      	str	r0, [r7, #4]
 8000f88:	4a03      	ldr	r2, [pc, #12]	; (8000f98 <LL_EXTI_ClearFlag_0_31+0x18>)
 8000f8a:	687b      	ldr	r3, [r7, #4]
 8000f8c:	6153      	str	r3, [r2, #20]
 8000f8e:	bf00      	nop
 8000f90:	370c      	adds	r7, #12
 8000f92:	46bd      	mov	sp, r7
 8000f94:	bc80      	pop	{r7}
 8000f96:	4770      	bx	lr
 8000f98:	40010400 	.word	0x40010400

08000f9c <LL_TIM_ClearFlag_UPDATE>:
 8000f9c:	b480      	push	{r7}
 8000f9e:	b083      	sub	sp, #12
 8000fa0:	af00      	add	r7, sp, #0
 8000fa2:	6078      	str	r0, [r7, #4]
 8000fa4:	687b      	ldr	r3, [r7, #4]
 8000fa6:	f06f 0201 	mvn.w	r2, #1
 8000faa:	611a      	str	r2, [r3, #16]
 8000fac:	bf00      	nop
 8000fae:	370c      	adds	r7, #12
 8000fb0:	46bd      	mov	sp, r7
 8000fb2:	bc80      	pop	{r7}
 8000fb4:	4770      	bx	lr

08000fb6 <LL_TIM_IsActiveFlag_UPDATE>:
 8000fb6:	b480      	push	{r7}
 8000fb8:	b083      	sub	sp, #12
 8000fba:	af00      	add	r7, sp, #0
 8000fbc:	6078      	str	r0, [r7, #4]
 8000fbe:	687b      	ldr	r3, [r7, #4]
 8000fc0:	691b      	ldr	r3, [r3, #16]
 8000fc2:	f003 0301 	and.w	r3, r3, #1
 8000fc6:	2b01      	cmp	r3, #1
 8000fc8:	d101      	bne.n	8000fce <LL_TIM_IsActiveFlag_UPDATE+0x18>
 8000fca:	2301      	movs	r3, #1
 8000fcc:	e000      	b.n	8000fd0 <LL_TIM_IsActiveFlag_UPDATE+0x1a>
 8000fce:	2300      	movs	r3, #0
 8000fd0:	4618      	mov	r0, r3
 8000fd2:	370c      	adds	r7, #12
 8000fd4:	46bd      	mov	sp, r7
 8000fd6:	bc80      	pop	{r7}
 8000fd8:	4770      	bx	lr

08000fda <NMI_Handler>:
 8000fda:	b480      	push	{r7}
 8000fdc:	af00      	add	r7, sp, #0
 8000fde:	e7fe      	b.n	8000fde <NMI_Handler+0x4>

08000fe0 <HardFault_Handler>:
 8000fe0:	b480      	push	{r7}
 8000fe2:	af00      	add	r7, sp, #0
 8000fe4:	e7fe      	b.n	8000fe4 <HardFault_Handler+0x4>

08000fe6 <MemManage_Handler>:
 8000fe6:	b480      	push	{r7}
 8000fe8:	af00      	add	r7, sp, #0
 8000fea:	e7fe      	b.n	8000fea <MemManage_Handler+0x4>

08000fec <BusFault_Handler>:
 8000fec:	b480      	push	{r7}
 8000fee:	af00      	add	r7, sp, #0
 8000ff0:	e7fe      	b.n	8000ff0 <BusFault_Handler+0x4>

08000ff2 <UsageFault_Handler>:
 8000ff2:	b480      	push	{r7}
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	e7fe      	b.n	8000ff6 <UsageFault_Handler+0x4>

08000ff8 <SVC_Handler>:
 8000ff8:	b480      	push	{r7}
 8000ffa:	af00      	add	r7, sp, #0
 8000ffc:	bf00      	nop
 8000ffe:	46bd      	mov	sp, r7
 8001000:	bc80      	pop	{r7}
 8001002:	4770      	bx	lr

08001004 <DebugMon_Handler>:
 8001004:	b480      	push	{r7}
 8001006:	af00      	add	r7, sp, #0
 8001008:	bf00      	nop
 800100a:	46bd      	mov	sp, r7
 800100c:	bc80      	pop	{r7}
 800100e:	4770      	bx	lr

08001010 <PendSV_Handler>:
 8001010:	b480      	push	{r7}
 8001012:	af00      	add	r7, sp, #0
 8001014:	bf00      	nop
 8001016:	46bd      	mov	sp, r7
 8001018:	bc80      	pop	{r7}
 800101a:	4770      	bx	lr

0800101c <SysTick_Handler>:
 800101c:	b480      	push	{r7}
 800101e:	af00      	add	r7, sp, #0
 8001020:	bf00      	nop
 8001022:	46bd      	mov	sp, r7
 8001024:	bc80      	pop	{r7}
 8001026:	4770      	bx	lr

08001028 <EXTI9_5_IRQHandler>:
 8001028:	b580      	push	{r7, lr}
 800102a:	af00      	add	r7, sp, #0
 800102c:	2040      	movs	r0, #64	; 0x40
 800102e:	f7ff ff91 	bl	8000f54 <LL_EXTI_IsActiveFlag_0_31>
 8001032:	4603      	mov	r3, r0
 8001034:	2b00      	cmp	r3, #0
 8001036:	d01d      	beq.n	8001074 <EXTI9_5_IRQHandler+0x4c>
 8001038:	2040      	movs	r0, #64	; 0x40
 800103a:	f7ff ffa1 	bl	8000f80 <LL_EXTI_ClearFlag_0_31>
 800103e:	4b0e      	ldr	r3, [pc, #56]	; (8001078 <EXTI9_5_IRQHandler+0x50>)
 8001040:	781b      	ldrb	r3, [r3, #0]
 8001042:	f083 0301 	eor.w	r3, r3, #1
 8001046:	b2db      	uxtb	r3, r3
 8001048:	2b00      	cmp	r3, #0
 800104a:	d013      	beq.n	8001074 <EXTI9_5_IRQHandler+0x4c>
 800104c:	4b0b      	ldr	r3, [pc, #44]	; (800107c <EXTI9_5_IRQHandler+0x54>)
 800104e:	681b      	ldr	r3, [r3, #0]
 8001050:	f242 7210 	movw	r2, #10000	; 0x2710
 8001054:	4293      	cmp	r3, r2
 8001056:	d90d      	bls.n	8001074 <EXTI9_5_IRQHandler+0x4c>
 8001058:	4b09      	ldr	r3, [pc, #36]	; (8001080 <EXTI9_5_IRQHandler+0x58>)
 800105a:	781b      	ldrb	r3, [r3, #0]
 800105c:	2b00      	cmp	r3, #0
 800105e:	d103      	bne.n	8001068 <EXTI9_5_IRQHandler+0x40>
 8001060:	4b08      	ldr	r3, [pc, #32]	; (8001084 <EXTI9_5_IRQHandler+0x5c>)
 8001062:	781b      	ldrb	r3, [r3, #0]
 8001064:	2b00      	cmp	r3, #0
 8001066:	d005      	beq.n	8001074 <EXTI9_5_IRQHandler+0x4c>
 8001068:	4b03      	ldr	r3, [pc, #12]	; (8001078 <EXTI9_5_IRQHandler+0x50>)
 800106a:	2201      	movs	r2, #1
 800106c:	701a      	strb	r2, [r3, #0]
 800106e:	4b03      	ldr	r3, [pc, #12]	; (800107c <EXTI9_5_IRQHandler+0x54>)
 8001070:	2200      	movs	r2, #0
 8001072:	601a      	str	r2, [r3, #0]
 8001074:	bf00      	nop
 8001076:	bd80      	pop	{r7, pc}
 8001078:	20000038 	.word	0x20000038
 800107c:	20000020 	.word	0x20000020
 8001080:	20000032 	.word	0x20000032
 8001084:	20000034 	.word	0x20000034

08001088 <TIM1_UP_IRQHandler>:
 8001088:	b580      	push	{r7, lr}
 800108a:	af00      	add	r7, sp, #0
 800108c:	480e      	ldr	r0, [pc, #56]	; (80010c8 <TIM1_UP_IRQHandler+0x40>)
 800108e:	f7ff ff92 	bl	8000fb6 <LL_TIM_IsActiveFlag_UPDATE>
 8001092:	4603      	mov	r3, r0
 8001094:	2b01      	cmp	r3, #1
 8001096:	d115      	bne.n	80010c4 <TIM1_UP_IRQHandler+0x3c>
 8001098:	480b      	ldr	r0, [pc, #44]	; (80010c8 <TIM1_UP_IRQHandler+0x40>)
 800109a:	f7ff ff7f 	bl	8000f9c <LL_TIM_ClearFlag_UPDATE>
 800109e:	4b0b      	ldr	r3, [pc, #44]	; (80010cc <TIM1_UP_IRQHandler+0x44>)
 80010a0:	681b      	ldr	r3, [r3, #0]
 80010a2:	3301      	adds	r3, #1
 80010a4:	4a09      	ldr	r2, [pc, #36]	; (80010cc <TIM1_UP_IRQHandler+0x44>)
 80010a6:	6013      	str	r3, [r2, #0]
 80010a8:	4b09      	ldr	r3, [pc, #36]	; (80010d0 <TIM1_UP_IRQHandler+0x48>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	3301      	adds	r3, #1
 80010ae:	4a08      	ldr	r2, [pc, #32]	; (80010d0 <TIM1_UP_IRQHandler+0x48>)
 80010b0:	6013      	str	r3, [r2, #0]
 80010b2:	4b08      	ldr	r3, [pc, #32]	; (80010d4 <TIM1_UP_IRQHandler+0x4c>)
 80010b4:	681b      	ldr	r3, [r3, #0]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d004      	beq.n	80010c4 <TIM1_UP_IRQHandler+0x3c>
 80010ba:	4b06      	ldr	r3, [pc, #24]	; (80010d4 <TIM1_UP_IRQHandler+0x4c>)
 80010bc:	681b      	ldr	r3, [r3, #0]
 80010be:	3b01      	subs	r3, #1
 80010c0:	4a04      	ldr	r2, [pc, #16]	; (80010d4 <TIM1_UP_IRQHandler+0x4c>)
 80010c2:	6013      	str	r3, [r2, #0]
 80010c4:	bf00      	nop
 80010c6:	bd80      	pop	{r7, pc}
 80010c8:	40012c00 	.word	0x40012c00
 80010cc:	20000020 	.word	0x20000020
 80010d0:	20000024 	.word	0x20000024
 80010d4:	2000002c 	.word	0x2000002c

080010d8 <SystemInit>:
 80010d8:	b480      	push	{r7}
 80010da:	af00      	add	r7, sp, #0
 80010dc:	bf00      	nop
 80010de:	46bd      	mov	sp, r7
 80010e0:	bc80      	pop	{r7}
 80010e2:	4770      	bx	lr

080010e4 <__NVIC_GetPriorityGrouping>:
 80010e4:	b480      	push	{r7}
 80010e6:	af00      	add	r7, sp, #0
 80010e8:	4b04      	ldr	r3, [pc, #16]	; (80010fc <__NVIC_GetPriorityGrouping+0x18>)
 80010ea:	68db      	ldr	r3, [r3, #12]
 80010ec:	0a1b      	lsrs	r3, r3, #8
 80010ee:	f003 0307 	and.w	r3, r3, #7
 80010f2:	4618      	mov	r0, r3
 80010f4:	46bd      	mov	sp, r7
 80010f6:	bc80      	pop	{r7}
 80010f8:	4770      	bx	lr
 80010fa:	bf00      	nop
 80010fc:	e000ed00 	.word	0xe000ed00

08001100 <__NVIC_EnableIRQ>:
 8001100:	b480      	push	{r7}
 8001102:	b083      	sub	sp, #12
 8001104:	af00      	add	r7, sp, #0
 8001106:	4603      	mov	r3, r0
 8001108:	71fb      	strb	r3, [r7, #7]
 800110a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800110e:	2b00      	cmp	r3, #0
 8001110:	db0b      	blt.n	800112a <__NVIC_EnableIRQ+0x2a>
 8001112:	79fb      	ldrb	r3, [r7, #7]
 8001114:	f003 021f 	and.w	r2, r3, #31
 8001118:	4906      	ldr	r1, [pc, #24]	; (8001134 <__NVIC_EnableIRQ+0x34>)
 800111a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800111e:	095b      	lsrs	r3, r3, #5
 8001120:	2001      	movs	r0, #1
 8001122:	fa00 f202 	lsl.w	r2, r0, r2
 8001126:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800112a:	bf00      	nop
 800112c:	370c      	adds	r7, #12
 800112e:	46bd      	mov	sp, r7
 8001130:	bc80      	pop	{r7}
 8001132:	4770      	bx	lr
 8001134:	e000e100 	.word	0xe000e100

08001138 <__NVIC_SetPriority>:
 8001138:	b480      	push	{r7}
 800113a:	b083      	sub	sp, #12
 800113c:	af00      	add	r7, sp, #0
 800113e:	4603      	mov	r3, r0
 8001140:	6039      	str	r1, [r7, #0]
 8001142:	71fb      	strb	r3, [r7, #7]
 8001144:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001148:	2b00      	cmp	r3, #0
 800114a:	db0a      	blt.n	8001162 <__NVIC_SetPriority+0x2a>
 800114c:	683b      	ldr	r3, [r7, #0]
 800114e:	b2da      	uxtb	r2, r3
 8001150:	490c      	ldr	r1, [pc, #48]	; (8001184 <__NVIC_SetPriority+0x4c>)
 8001152:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001156:	0112      	lsls	r2, r2, #4
 8001158:	b2d2      	uxtb	r2, r2
 800115a:	440b      	add	r3, r1
 800115c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001160:	e00a      	b.n	8001178 <__NVIC_SetPriority+0x40>
 8001162:	683b      	ldr	r3, [r7, #0]
 8001164:	b2da      	uxtb	r2, r3
 8001166:	4908      	ldr	r1, [pc, #32]	; (8001188 <__NVIC_SetPriority+0x50>)
 8001168:	79fb      	ldrb	r3, [r7, #7]
 800116a:	f003 030f 	and.w	r3, r3, #15
 800116e:	3b04      	subs	r3, #4
 8001170:	0112      	lsls	r2, r2, #4
 8001172:	b2d2      	uxtb	r2, r2
 8001174:	440b      	add	r3, r1
 8001176:	761a      	strb	r2, [r3, #24]
 8001178:	bf00      	nop
 800117a:	370c      	adds	r7, #12
 800117c:	46bd      	mov	sp, r7
 800117e:	bc80      	pop	{r7}
 8001180:	4770      	bx	lr
 8001182:	bf00      	nop
 8001184:	e000e100 	.word	0xe000e100
 8001188:	e000ed00 	.word	0xe000ed00

0800118c <NVIC_EncodePriority>:
 800118c:	b480      	push	{r7}
 800118e:	b089      	sub	sp, #36	; 0x24
 8001190:	af00      	add	r7, sp, #0
 8001192:	60f8      	str	r0, [r7, #12]
 8001194:	60b9      	str	r1, [r7, #8]
 8001196:	607a      	str	r2, [r7, #4]
 8001198:	68fb      	ldr	r3, [r7, #12]
 800119a:	f003 0307 	and.w	r3, r3, #7
 800119e:	61fb      	str	r3, [r7, #28]
 80011a0:	69fb      	ldr	r3, [r7, #28]
 80011a2:	f1c3 0307 	rsb	r3, r3, #7
 80011a6:	2b04      	cmp	r3, #4
 80011a8:	bf28      	it	cs
 80011aa:	2304      	movcs	r3, #4
 80011ac:	61bb      	str	r3, [r7, #24]
 80011ae:	69fb      	ldr	r3, [r7, #28]
 80011b0:	3304      	adds	r3, #4
 80011b2:	2b06      	cmp	r3, #6
 80011b4:	d902      	bls.n	80011bc <NVIC_EncodePriority+0x30>
 80011b6:	69fb      	ldr	r3, [r7, #28]
 80011b8:	3b03      	subs	r3, #3
 80011ba:	e000      	b.n	80011be <NVIC_EncodePriority+0x32>
 80011bc:	2300      	movs	r3, #0
 80011be:	617b      	str	r3, [r7, #20]
 80011c0:	f04f 32ff 	mov.w	r2, #4294967295
 80011c4:	69bb      	ldr	r3, [r7, #24]
 80011c6:	fa02 f303 	lsl.w	r3, r2, r3
 80011ca:	43da      	mvns	r2, r3
 80011cc:	68bb      	ldr	r3, [r7, #8]
 80011ce:	401a      	ands	r2, r3
 80011d0:	697b      	ldr	r3, [r7, #20]
 80011d2:	409a      	lsls	r2, r3
 80011d4:	f04f 31ff 	mov.w	r1, #4294967295
 80011d8:	697b      	ldr	r3, [r7, #20]
 80011da:	fa01 f303 	lsl.w	r3, r1, r3
 80011de:	43d9      	mvns	r1, r3
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	400b      	ands	r3, r1
 80011e4:	4313      	orrs	r3, r2
 80011e6:	4618      	mov	r0, r3
 80011e8:	3724      	adds	r7, #36	; 0x24
 80011ea:	46bd      	mov	sp, r7
 80011ec:	bc80      	pop	{r7}
 80011ee:	4770      	bx	lr

080011f0 <LL_APB2_GRP1_EnableClock>:
 80011f0:	b480      	push	{r7}
 80011f2:	b085      	sub	sp, #20
 80011f4:	af00      	add	r7, sp, #0
 80011f6:	6078      	str	r0, [r7, #4]
 80011f8:	4b08      	ldr	r3, [pc, #32]	; (800121c <LL_APB2_GRP1_EnableClock+0x2c>)
 80011fa:	699a      	ldr	r2, [r3, #24]
 80011fc:	4907      	ldr	r1, [pc, #28]	; (800121c <LL_APB2_GRP1_EnableClock+0x2c>)
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	4313      	orrs	r3, r2
 8001202:	618b      	str	r3, [r1, #24]
 8001204:	4b05      	ldr	r3, [pc, #20]	; (800121c <LL_APB2_GRP1_EnableClock+0x2c>)
 8001206:	699a      	ldr	r2, [r3, #24]
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	4013      	ands	r3, r2
 800120c:	60fb      	str	r3, [r7, #12]
 800120e:	68fb      	ldr	r3, [r7, #12]
 8001210:	bf00      	nop
 8001212:	3714      	adds	r7, #20
 8001214:	46bd      	mov	sp, r7
 8001216:	bc80      	pop	{r7}
 8001218:	4770      	bx	lr
 800121a:	bf00      	nop
 800121c:	40021000 	.word	0x40021000

08001220 <LL_TIM_DisableARRPreload>:
 8001220:	b480      	push	{r7}
 8001222:	b083      	sub	sp, #12
 8001224:	af00      	add	r7, sp, #0
 8001226:	6078      	str	r0, [r7, #4]
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	681b      	ldr	r3, [r3, #0]
 800122c:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8001230:	687b      	ldr	r3, [r7, #4]
 8001232:	601a      	str	r2, [r3, #0]
 8001234:	bf00      	nop
 8001236:	370c      	adds	r7, #12
 8001238:	46bd      	mov	sp, r7
 800123a:	bc80      	pop	{r7}
 800123c:	4770      	bx	lr

0800123e <LL_TIM_SetClockSource>:
 800123e:	b480      	push	{r7}
 8001240:	b083      	sub	sp, #12
 8001242:	af00      	add	r7, sp, #0
 8001244:	6078      	str	r0, [r7, #4]
 8001246:	6039      	str	r1, [r7, #0]
 8001248:	687b      	ldr	r3, [r7, #4]
 800124a:	689b      	ldr	r3, [r3, #8]
 800124c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001250:	f023 0307 	bic.w	r3, r3, #7
 8001254:	683a      	ldr	r2, [r7, #0]
 8001256:	431a      	orrs	r2, r3
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	609a      	str	r2, [r3, #8]
 800125c:	bf00      	nop
 800125e:	370c      	adds	r7, #12
 8001260:	46bd      	mov	sp, r7
 8001262:	bc80      	pop	{r7}
 8001264:	4770      	bx	lr

08001266 <LL_TIM_SetTriggerOutput>:
 8001266:	b480      	push	{r7}
 8001268:	b083      	sub	sp, #12
 800126a:	af00      	add	r7, sp, #0
 800126c:	6078      	str	r0, [r7, #4]
 800126e:	6039      	str	r1, [r7, #0]
 8001270:	687b      	ldr	r3, [r7, #4]
 8001272:	685b      	ldr	r3, [r3, #4]
 8001274:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8001278:	683b      	ldr	r3, [r7, #0]
 800127a:	431a      	orrs	r2, r3
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	605a      	str	r2, [r3, #4]
 8001280:	bf00      	nop
 8001282:	370c      	adds	r7, #12
 8001284:	46bd      	mov	sp, r7
 8001286:	bc80      	pop	{r7}
 8001288:	4770      	bx	lr

0800128a <LL_TIM_DisableMasterSlaveMode>:
 800128a:	b480      	push	{r7}
 800128c:	b083      	sub	sp, #12
 800128e:	af00      	add	r7, sp, #0
 8001290:	6078      	str	r0, [r7, #4]
 8001292:	687b      	ldr	r3, [r7, #4]
 8001294:	689b      	ldr	r3, [r3, #8]
 8001296:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	609a      	str	r2, [r3, #8]
 800129e:	bf00      	nop
 80012a0:	370c      	adds	r7, #12
 80012a2:	46bd      	mov	sp, r7
 80012a4:	bc80      	pop	{r7}
 80012a6:	4770      	bx	lr

080012a8 <MX_TIM1_Init>:
 80012a8:	b580      	push	{r7, lr}
 80012aa:	b086      	sub	sp, #24
 80012ac:	af00      	add	r7, sp, #0
 80012ae:	1d3b      	adds	r3, r7, #4
 80012b0:	2200      	movs	r2, #0
 80012b2:	601a      	str	r2, [r3, #0]
 80012b4:	605a      	str	r2, [r3, #4]
 80012b6:	609a      	str	r2, [r3, #8]
 80012b8:	60da      	str	r2, [r3, #12]
 80012ba:	611a      	str	r2, [r3, #16]
 80012bc:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80012c0:	f7ff ff96 	bl	80011f0 <LL_APB2_GRP1_EnableClock>
 80012c4:	f7ff ff0e 	bl	80010e4 <__NVIC_GetPriorityGrouping>
 80012c8:	4603      	mov	r3, r0
 80012ca:	2200      	movs	r2, #0
 80012cc:	2100      	movs	r1, #0
 80012ce:	4618      	mov	r0, r3
 80012d0:	f7ff ff5c 	bl	800118c <NVIC_EncodePriority>
 80012d4:	4603      	mov	r3, r0
 80012d6:	4619      	mov	r1, r3
 80012d8:	2019      	movs	r0, #25
 80012da:	f7ff ff2d 	bl	8001138 <__NVIC_SetPriority>
 80012de:	2019      	movs	r0, #25
 80012e0:	f7ff ff0e 	bl	8001100 <__NVIC_EnableIRQ>
 80012e4:	237f      	movs	r3, #127	; 0x7f
 80012e6:	80bb      	strh	r3, [r7, #4]
 80012e8:	2300      	movs	r3, #0
 80012ea:	60bb      	str	r3, [r7, #8]
 80012ec:	2303      	movs	r3, #3
 80012ee:	60fb      	str	r3, [r7, #12]
 80012f0:	2300      	movs	r3, #0
 80012f2:	613b      	str	r3, [r7, #16]
 80012f4:	2300      	movs	r3, #0
 80012f6:	617b      	str	r3, [r7, #20]
 80012f8:	1d3b      	adds	r3, r7, #4
 80012fa:	4619      	mov	r1, r3
 80012fc:	480a      	ldr	r0, [pc, #40]	; (8001328 <MX_TIM1_Init+0x80>)
 80012fe:	f000 fa97 	bl	8001830 <LL_TIM_Init>
 8001302:	4809      	ldr	r0, [pc, #36]	; (8001328 <MX_TIM1_Init+0x80>)
 8001304:	f7ff ff8c 	bl	8001220 <LL_TIM_DisableARRPreload>
 8001308:	2100      	movs	r1, #0
 800130a:	4807      	ldr	r0, [pc, #28]	; (8001328 <MX_TIM1_Init+0x80>)
 800130c:	f7ff ff97 	bl	800123e <LL_TIM_SetClockSource>
 8001310:	2100      	movs	r1, #0
 8001312:	4805      	ldr	r0, [pc, #20]	; (8001328 <MX_TIM1_Init+0x80>)
 8001314:	f7ff ffa7 	bl	8001266 <LL_TIM_SetTriggerOutput>
 8001318:	4803      	ldr	r0, [pc, #12]	; (8001328 <MX_TIM1_Init+0x80>)
 800131a:	f7ff ffb6 	bl	800128a <LL_TIM_DisableMasterSlaveMode>
 800131e:	bf00      	nop
 8001320:	3718      	adds	r7, #24
 8001322:	46bd      	mov	sp, r7
 8001324:	bd80      	pop	{r7, pc}
 8001326:	bf00      	nop
 8001328:	40012c00 	.word	0x40012c00

0800132c <Reset_Handler>:
 800132c:	2100      	movs	r1, #0
 800132e:	e003      	b.n	8001338 <LoopCopyDataInit>

08001330 <CopyDataInit>:
 8001330:	4b0b      	ldr	r3, [pc, #44]	; (8001360 <LoopFillZerobss+0x14>)
 8001332:	585b      	ldr	r3, [r3, r1]
 8001334:	5043      	str	r3, [r0, r1]
 8001336:	3104      	adds	r1, #4

08001338 <LoopCopyDataInit>:
 8001338:	480a      	ldr	r0, [pc, #40]	; (8001364 <LoopFillZerobss+0x18>)
 800133a:	4b0b      	ldr	r3, [pc, #44]	; (8001368 <LoopFillZerobss+0x1c>)
 800133c:	1842      	adds	r2, r0, r1
 800133e:	429a      	cmp	r2, r3
 8001340:	d3f6      	bcc.n	8001330 <CopyDataInit>
 8001342:	4a0a      	ldr	r2, [pc, #40]	; (800136c <LoopFillZerobss+0x20>)
 8001344:	e002      	b.n	800134c <LoopFillZerobss>

08001346 <FillZerobss>:
 8001346:	2300      	movs	r3, #0
 8001348:	f842 3b04 	str.w	r3, [r2], #4

0800134c <LoopFillZerobss>:
 800134c:	4b08      	ldr	r3, [pc, #32]	; (8001370 <LoopFillZerobss+0x24>)
 800134e:	429a      	cmp	r2, r3
 8001350:	d3f9      	bcc.n	8001346 <FillZerobss>
 8001352:	f7ff fec1 	bl	80010d8 <SystemInit>
 8001356:	f000 fb23 	bl	80019a0 <__libc_init_array>
 800135a:	f7ff fa15 	bl	8000788 <main>
 800135e:	4770      	bx	lr
 8001360:	08001a08 	.word	0x08001a08
 8001364:	20000000 	.word	0x20000000
 8001368:	20000004 	.word	0x20000004
 800136c:	20000004 	.word	0x20000004
 8001370:	2000003c 	.word	0x2000003c

08001374 <ADC1_2_IRQHandler>:
 8001374:	e7fe      	b.n	8001374 <ADC1_2_IRQHandler>
	...

08001378 <LL_EXTI_EnableIT_0_31>:
 8001378:	b480      	push	{r7}
 800137a:	b083      	sub	sp, #12
 800137c:	af00      	add	r7, sp, #0
 800137e:	6078      	str	r0, [r7, #4]
 8001380:	4b05      	ldr	r3, [pc, #20]	; (8001398 <LL_EXTI_EnableIT_0_31+0x20>)
 8001382:	681a      	ldr	r2, [r3, #0]
 8001384:	4904      	ldr	r1, [pc, #16]	; (8001398 <LL_EXTI_EnableIT_0_31+0x20>)
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	4313      	orrs	r3, r2
 800138a:	600b      	str	r3, [r1, #0]
 800138c:	bf00      	nop
 800138e:	370c      	adds	r7, #12
 8001390:	46bd      	mov	sp, r7
 8001392:	bc80      	pop	{r7}
 8001394:	4770      	bx	lr
 8001396:	bf00      	nop
 8001398:	40010400 	.word	0x40010400

0800139c <LL_EXTI_DisableIT_0_31>:
 800139c:	b480      	push	{r7}
 800139e:	b083      	sub	sp, #12
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
 80013a4:	4b05      	ldr	r3, [pc, #20]	; (80013bc <LL_EXTI_DisableIT_0_31+0x20>)
 80013a6:	681a      	ldr	r2, [r3, #0]
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	43db      	mvns	r3, r3
 80013ac:	4903      	ldr	r1, [pc, #12]	; (80013bc <LL_EXTI_DisableIT_0_31+0x20>)
 80013ae:	4013      	ands	r3, r2
 80013b0:	600b      	str	r3, [r1, #0]
 80013b2:	bf00      	nop
 80013b4:	370c      	adds	r7, #12
 80013b6:	46bd      	mov	sp, r7
 80013b8:	bc80      	pop	{r7}
 80013ba:	4770      	bx	lr
 80013bc:	40010400 	.word	0x40010400

080013c0 <LL_EXTI_EnableEvent_0_31>:
 80013c0:	b480      	push	{r7}
 80013c2:	b083      	sub	sp, #12
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	6078      	str	r0, [r7, #4]
 80013c8:	4b05      	ldr	r3, [pc, #20]	; (80013e0 <LL_EXTI_EnableEvent_0_31+0x20>)
 80013ca:	685a      	ldr	r2, [r3, #4]
 80013cc:	4904      	ldr	r1, [pc, #16]	; (80013e0 <LL_EXTI_EnableEvent_0_31+0x20>)
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	4313      	orrs	r3, r2
 80013d2:	604b      	str	r3, [r1, #4]
 80013d4:	bf00      	nop
 80013d6:	370c      	adds	r7, #12
 80013d8:	46bd      	mov	sp, r7
 80013da:	bc80      	pop	{r7}
 80013dc:	4770      	bx	lr
 80013de:	bf00      	nop
 80013e0:	40010400 	.word	0x40010400

080013e4 <LL_EXTI_DisableEvent_0_31>:
 80013e4:	b480      	push	{r7}
 80013e6:	b083      	sub	sp, #12
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	6078      	str	r0, [r7, #4]
 80013ec:	4b05      	ldr	r3, [pc, #20]	; (8001404 <LL_EXTI_DisableEvent_0_31+0x20>)
 80013ee:	685a      	ldr	r2, [r3, #4]
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	43db      	mvns	r3, r3
 80013f4:	4903      	ldr	r1, [pc, #12]	; (8001404 <LL_EXTI_DisableEvent_0_31+0x20>)
 80013f6:	4013      	ands	r3, r2
 80013f8:	604b      	str	r3, [r1, #4]
 80013fa:	bf00      	nop
 80013fc:	370c      	adds	r7, #12
 80013fe:	46bd      	mov	sp, r7
 8001400:	bc80      	pop	{r7}
 8001402:	4770      	bx	lr
 8001404:	40010400 	.word	0x40010400

08001408 <LL_EXTI_EnableRisingTrig_0_31>:
 8001408:	b480      	push	{r7}
 800140a:	b083      	sub	sp, #12
 800140c:	af00      	add	r7, sp, #0
 800140e:	6078      	str	r0, [r7, #4]
 8001410:	4b05      	ldr	r3, [pc, #20]	; (8001428 <LL_EXTI_EnableRisingTrig_0_31+0x20>)
 8001412:	689a      	ldr	r2, [r3, #8]
 8001414:	4904      	ldr	r1, [pc, #16]	; (8001428 <LL_EXTI_EnableRisingTrig_0_31+0x20>)
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	4313      	orrs	r3, r2
 800141a:	608b      	str	r3, [r1, #8]
 800141c:	bf00      	nop
 800141e:	370c      	adds	r7, #12
 8001420:	46bd      	mov	sp, r7
 8001422:	bc80      	pop	{r7}
 8001424:	4770      	bx	lr
 8001426:	bf00      	nop
 8001428:	40010400 	.word	0x40010400

0800142c <LL_EXTI_DisableRisingTrig_0_31>:
 800142c:	b480      	push	{r7}
 800142e:	b083      	sub	sp, #12
 8001430:	af00      	add	r7, sp, #0
 8001432:	6078      	str	r0, [r7, #4]
 8001434:	4b05      	ldr	r3, [pc, #20]	; (800144c <LL_EXTI_DisableRisingTrig_0_31+0x20>)
 8001436:	689a      	ldr	r2, [r3, #8]
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	43db      	mvns	r3, r3
 800143c:	4903      	ldr	r1, [pc, #12]	; (800144c <LL_EXTI_DisableRisingTrig_0_31+0x20>)
 800143e:	4013      	ands	r3, r2
 8001440:	608b      	str	r3, [r1, #8]
 8001442:	bf00      	nop
 8001444:	370c      	adds	r7, #12
 8001446:	46bd      	mov	sp, r7
 8001448:	bc80      	pop	{r7}
 800144a:	4770      	bx	lr
 800144c:	40010400 	.word	0x40010400

08001450 <LL_EXTI_EnableFallingTrig_0_31>:
 8001450:	b480      	push	{r7}
 8001452:	b083      	sub	sp, #12
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
 8001458:	4b05      	ldr	r3, [pc, #20]	; (8001470 <LL_EXTI_EnableFallingTrig_0_31+0x20>)
 800145a:	68da      	ldr	r2, [r3, #12]
 800145c:	4904      	ldr	r1, [pc, #16]	; (8001470 <LL_EXTI_EnableFallingTrig_0_31+0x20>)
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	4313      	orrs	r3, r2
 8001462:	60cb      	str	r3, [r1, #12]
 8001464:	bf00      	nop
 8001466:	370c      	adds	r7, #12
 8001468:	46bd      	mov	sp, r7
 800146a:	bc80      	pop	{r7}
 800146c:	4770      	bx	lr
 800146e:	bf00      	nop
 8001470:	40010400 	.word	0x40010400

08001474 <LL_EXTI_DisableFallingTrig_0_31>:
 8001474:	b480      	push	{r7}
 8001476:	b083      	sub	sp, #12
 8001478:	af00      	add	r7, sp, #0
 800147a:	6078      	str	r0, [r7, #4]
 800147c:	4b05      	ldr	r3, [pc, #20]	; (8001494 <LL_EXTI_DisableFallingTrig_0_31+0x20>)
 800147e:	68da      	ldr	r2, [r3, #12]
 8001480:	687b      	ldr	r3, [r7, #4]
 8001482:	43db      	mvns	r3, r3
 8001484:	4903      	ldr	r1, [pc, #12]	; (8001494 <LL_EXTI_DisableFallingTrig_0_31+0x20>)
 8001486:	4013      	ands	r3, r2
 8001488:	60cb      	str	r3, [r1, #12]
 800148a:	bf00      	nop
 800148c:	370c      	adds	r7, #12
 800148e:	46bd      	mov	sp, r7
 8001490:	bc80      	pop	{r7}
 8001492:	4770      	bx	lr
 8001494:	40010400 	.word	0x40010400

08001498 <LL_EXTI_Init>:
 8001498:	b580      	push	{r7, lr}
 800149a:	b084      	sub	sp, #16
 800149c:	af00      	add	r7, sp, #0
 800149e:	6078      	str	r0, [r7, #4]
 80014a0:	2300      	movs	r3, #0
 80014a2:	73fb      	strb	r3, [r7, #15]
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	791b      	ldrb	r3, [r3, #4]
 80014a8:	2b00      	cmp	r3, #0
 80014aa:	d060      	beq.n	800156e <LL_EXTI_Init+0xd6>
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	681b      	ldr	r3, [r3, #0]
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d067      	beq.n	8001584 <LL_EXTI_Init+0xec>
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	795b      	ldrb	r3, [r3, #5]
 80014b8:	2b01      	cmp	r3, #1
 80014ba:	d00e      	beq.n	80014da <LL_EXTI_Init+0x42>
 80014bc:	2b02      	cmp	r3, #2
 80014be:	d017      	beq.n	80014f0 <LL_EXTI_Init+0x58>
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	d120      	bne.n	8001506 <LL_EXTI_Init+0x6e>
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	4618      	mov	r0, r3
 80014ca:	f7ff ff8b 	bl	80013e4 <LL_EXTI_DisableEvent_0_31>
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	4618      	mov	r0, r3
 80014d4:	f7ff ff50 	bl	8001378 <LL_EXTI_EnableIT_0_31>
 80014d8:	e018      	b.n	800150c <LL_EXTI_Init+0x74>
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	681b      	ldr	r3, [r3, #0]
 80014de:	4618      	mov	r0, r3
 80014e0:	f7ff ff5c 	bl	800139c <LL_EXTI_DisableIT_0_31>
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	4618      	mov	r0, r3
 80014ea:	f7ff ff69 	bl	80013c0 <LL_EXTI_EnableEvent_0_31>
 80014ee:	e00d      	b.n	800150c <LL_EXTI_Init+0x74>
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	4618      	mov	r0, r3
 80014f6:	f7ff ff3f 	bl	8001378 <LL_EXTI_EnableIT_0_31>
 80014fa:	687b      	ldr	r3, [r7, #4]
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	4618      	mov	r0, r3
 8001500:	f7ff ff5e 	bl	80013c0 <LL_EXTI_EnableEvent_0_31>
 8001504:	e002      	b.n	800150c <LL_EXTI_Init+0x74>
 8001506:	2301      	movs	r3, #1
 8001508:	73fb      	strb	r3, [r7, #15]
 800150a:	bf00      	nop
 800150c:	687b      	ldr	r3, [r7, #4]
 800150e:	799b      	ldrb	r3, [r3, #6]
 8001510:	2b00      	cmp	r3, #0
 8001512:	d037      	beq.n	8001584 <LL_EXTI_Init+0xec>
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	799b      	ldrb	r3, [r3, #6]
 8001518:	2b02      	cmp	r3, #2
 800151a:	d00e      	beq.n	800153a <LL_EXTI_Init+0xa2>
 800151c:	2b03      	cmp	r3, #3
 800151e:	d017      	beq.n	8001550 <LL_EXTI_Init+0xb8>
 8001520:	2b01      	cmp	r3, #1
 8001522:	d120      	bne.n	8001566 <LL_EXTI_Init+0xce>
 8001524:	687b      	ldr	r3, [r7, #4]
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	4618      	mov	r0, r3
 800152a:	f7ff ffa3 	bl	8001474 <LL_EXTI_DisableFallingTrig_0_31>
 800152e:	687b      	ldr	r3, [r7, #4]
 8001530:	681b      	ldr	r3, [r3, #0]
 8001532:	4618      	mov	r0, r3
 8001534:	f7ff ff68 	bl	8001408 <LL_EXTI_EnableRisingTrig_0_31>
 8001538:	e025      	b.n	8001586 <LL_EXTI_Init+0xee>
 800153a:	687b      	ldr	r3, [r7, #4]
 800153c:	681b      	ldr	r3, [r3, #0]
 800153e:	4618      	mov	r0, r3
 8001540:	f7ff ff74 	bl	800142c <LL_EXTI_DisableRisingTrig_0_31>
 8001544:	687b      	ldr	r3, [r7, #4]
 8001546:	681b      	ldr	r3, [r3, #0]
 8001548:	4618      	mov	r0, r3
 800154a:	f7ff ff81 	bl	8001450 <LL_EXTI_EnableFallingTrig_0_31>
 800154e:	e01a      	b.n	8001586 <LL_EXTI_Init+0xee>
 8001550:	687b      	ldr	r3, [r7, #4]
 8001552:	681b      	ldr	r3, [r3, #0]
 8001554:	4618      	mov	r0, r3
 8001556:	f7ff ff57 	bl	8001408 <LL_EXTI_EnableRisingTrig_0_31>
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	4618      	mov	r0, r3
 8001560:	f7ff ff76 	bl	8001450 <LL_EXTI_EnableFallingTrig_0_31>
 8001564:	e00f      	b.n	8001586 <LL_EXTI_Init+0xee>
 8001566:	2301      	movs	r3, #1
 8001568:	73fb      	strb	r3, [r7, #15]
 800156a:	bf00      	nop
 800156c:	e00b      	b.n	8001586 <LL_EXTI_Init+0xee>
 800156e:	687b      	ldr	r3, [r7, #4]
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	4618      	mov	r0, r3
 8001574:	f7ff ff12 	bl	800139c <LL_EXTI_DisableIT_0_31>
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	4618      	mov	r0, r3
 800157e:	f7ff ff31 	bl	80013e4 <LL_EXTI_DisableEvent_0_31>
 8001582:	e000      	b.n	8001586 <LL_EXTI_Init+0xee>
 8001584:	bf00      	nop
 8001586:	7bfb      	ldrb	r3, [r7, #15]
 8001588:	4618      	mov	r0, r3
 800158a:	3710      	adds	r7, #16
 800158c:	46bd      	mov	sp, r7
 800158e:	bd80      	pop	{r7, pc}

08001590 <LL_GPIO_SetPinMode>:
 8001590:	b490      	push	{r4, r7}
 8001592:	b088      	sub	sp, #32
 8001594:	af00      	add	r7, sp, #0
 8001596:	60f8      	str	r0, [r7, #12]
 8001598:	60b9      	str	r1, [r7, #8]
 800159a:	607a      	str	r2, [r7, #4]
 800159c:	68fb      	ldr	r3, [r7, #12]
 800159e:	461a      	mov	r2, r3
 80015a0:	68bb      	ldr	r3, [r7, #8]
 80015a2:	0e1b      	lsrs	r3, r3, #24
 80015a4:	4413      	add	r3, r2
 80015a6:	461c      	mov	r4, r3
 80015a8:	6822      	ldr	r2, [r4, #0]
 80015aa:	68bb      	ldr	r3, [r7, #8]
 80015ac:	617b      	str	r3, [r7, #20]
 80015ae:	697b      	ldr	r3, [r7, #20]
 80015b0:	fa93 f3a3 	rbit	r3, r3
 80015b4:	613b      	str	r3, [r7, #16]
 80015b6:	693b      	ldr	r3, [r7, #16]
 80015b8:	fab3 f383 	clz	r3, r3
 80015bc:	b2db      	uxtb	r3, r3
 80015be:	009b      	lsls	r3, r3, #2
 80015c0:	210f      	movs	r1, #15
 80015c2:	fa01 f303 	lsl.w	r3, r1, r3
 80015c6:	43db      	mvns	r3, r3
 80015c8:	401a      	ands	r2, r3
 80015ca:	68bb      	ldr	r3, [r7, #8]
 80015cc:	61fb      	str	r3, [r7, #28]
 80015ce:	69fb      	ldr	r3, [r7, #28]
 80015d0:	fa93 f3a3 	rbit	r3, r3
 80015d4:	61bb      	str	r3, [r7, #24]
 80015d6:	69bb      	ldr	r3, [r7, #24]
 80015d8:	fab3 f383 	clz	r3, r3
 80015dc:	b2db      	uxtb	r3, r3
 80015de:	009b      	lsls	r3, r3, #2
 80015e0:	6879      	ldr	r1, [r7, #4]
 80015e2:	fa01 f303 	lsl.w	r3, r1, r3
 80015e6:	4313      	orrs	r3, r2
 80015e8:	6023      	str	r3, [r4, #0]
 80015ea:	bf00      	nop
 80015ec:	3720      	adds	r7, #32
 80015ee:	46bd      	mov	sp, r7
 80015f0:	bc90      	pop	{r4, r7}
 80015f2:	4770      	bx	lr

080015f4 <LL_GPIO_SetPinSpeed>:
 80015f4:	b490      	push	{r4, r7}
 80015f6:	b088      	sub	sp, #32
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	60f8      	str	r0, [r7, #12]
 80015fc:	60b9      	str	r1, [r7, #8]
 80015fe:	607a      	str	r2, [r7, #4]
 8001600:	68fb      	ldr	r3, [r7, #12]
 8001602:	461a      	mov	r2, r3
 8001604:	68bb      	ldr	r3, [r7, #8]
 8001606:	0e1b      	lsrs	r3, r3, #24
 8001608:	4413      	add	r3, r2
 800160a:	461c      	mov	r4, r3
 800160c:	6822      	ldr	r2, [r4, #0]
 800160e:	68bb      	ldr	r3, [r7, #8]
 8001610:	617b      	str	r3, [r7, #20]
 8001612:	697b      	ldr	r3, [r7, #20]
 8001614:	fa93 f3a3 	rbit	r3, r3
 8001618:	613b      	str	r3, [r7, #16]
 800161a:	693b      	ldr	r3, [r7, #16]
 800161c:	fab3 f383 	clz	r3, r3
 8001620:	b2db      	uxtb	r3, r3
 8001622:	009b      	lsls	r3, r3, #2
 8001624:	2103      	movs	r1, #3
 8001626:	fa01 f303 	lsl.w	r3, r1, r3
 800162a:	43db      	mvns	r3, r3
 800162c:	401a      	ands	r2, r3
 800162e:	68bb      	ldr	r3, [r7, #8]
 8001630:	61fb      	str	r3, [r7, #28]
 8001632:	69fb      	ldr	r3, [r7, #28]
 8001634:	fa93 f3a3 	rbit	r3, r3
 8001638:	61bb      	str	r3, [r7, #24]
 800163a:	69bb      	ldr	r3, [r7, #24]
 800163c:	fab3 f383 	clz	r3, r3
 8001640:	b2db      	uxtb	r3, r3
 8001642:	009b      	lsls	r3, r3, #2
 8001644:	6879      	ldr	r1, [r7, #4]
 8001646:	fa01 f303 	lsl.w	r3, r1, r3
 800164a:	4313      	orrs	r3, r2
 800164c:	6023      	str	r3, [r4, #0]
 800164e:	bf00      	nop
 8001650:	3720      	adds	r7, #32
 8001652:	46bd      	mov	sp, r7
 8001654:	bc90      	pop	{r4, r7}
 8001656:	4770      	bx	lr

08001658 <LL_GPIO_SetPinOutputType>:
 8001658:	b490      	push	{r4, r7}
 800165a:	b088      	sub	sp, #32
 800165c:	af00      	add	r7, sp, #0
 800165e:	60f8      	str	r0, [r7, #12]
 8001660:	60b9      	str	r1, [r7, #8]
 8001662:	607a      	str	r2, [r7, #4]
 8001664:	68fb      	ldr	r3, [r7, #12]
 8001666:	461a      	mov	r2, r3
 8001668:	68bb      	ldr	r3, [r7, #8]
 800166a:	0e1b      	lsrs	r3, r3, #24
 800166c:	4413      	add	r3, r2
 800166e:	461c      	mov	r4, r3
 8001670:	6822      	ldr	r2, [r4, #0]
 8001672:	68bb      	ldr	r3, [r7, #8]
 8001674:	617b      	str	r3, [r7, #20]
 8001676:	697b      	ldr	r3, [r7, #20]
 8001678:	fa93 f3a3 	rbit	r3, r3
 800167c:	613b      	str	r3, [r7, #16]
 800167e:	693b      	ldr	r3, [r7, #16]
 8001680:	fab3 f383 	clz	r3, r3
 8001684:	b2db      	uxtb	r3, r3
 8001686:	009b      	lsls	r3, r3, #2
 8001688:	2104      	movs	r1, #4
 800168a:	fa01 f303 	lsl.w	r3, r1, r3
 800168e:	43db      	mvns	r3, r3
 8001690:	401a      	ands	r2, r3
 8001692:	68bb      	ldr	r3, [r7, #8]
 8001694:	61fb      	str	r3, [r7, #28]
 8001696:	69fb      	ldr	r3, [r7, #28]
 8001698:	fa93 f3a3 	rbit	r3, r3
 800169c:	61bb      	str	r3, [r7, #24]
 800169e:	69bb      	ldr	r3, [r7, #24]
 80016a0:	fab3 f383 	clz	r3, r3
 80016a4:	b2db      	uxtb	r3, r3
 80016a6:	009b      	lsls	r3, r3, #2
 80016a8:	6879      	ldr	r1, [r7, #4]
 80016aa:	fa01 f303 	lsl.w	r3, r1, r3
 80016ae:	4313      	orrs	r3, r2
 80016b0:	6023      	str	r3, [r4, #0]
 80016b2:	bf00      	nop
 80016b4:	3720      	adds	r7, #32
 80016b6:	46bd      	mov	sp, r7
 80016b8:	bc90      	pop	{r4, r7}
 80016ba:	4770      	bx	lr

080016bc <LL_GPIO_SetPinPull>:
 80016bc:	b480      	push	{r7}
 80016be:	b087      	sub	sp, #28
 80016c0:	af00      	add	r7, sp, #0
 80016c2:	60f8      	str	r0, [r7, #12]
 80016c4:	60b9      	str	r1, [r7, #8]
 80016c6:	607a      	str	r2, [r7, #4]
 80016c8:	68fb      	ldr	r3, [r7, #12]
 80016ca:	68da      	ldr	r2, [r3, #12]
 80016cc:	68bb      	ldr	r3, [r7, #8]
 80016ce:	0a1b      	lsrs	r3, r3, #8
 80016d0:	43db      	mvns	r3, r3
 80016d2:	401a      	ands	r2, r3
 80016d4:	68bb      	ldr	r3, [r7, #8]
 80016d6:	0a1b      	lsrs	r3, r3, #8
 80016d8:	617b      	str	r3, [r7, #20]
 80016da:	697b      	ldr	r3, [r7, #20]
 80016dc:	fa93 f3a3 	rbit	r3, r3
 80016e0:	613b      	str	r3, [r7, #16]
 80016e2:	693b      	ldr	r3, [r7, #16]
 80016e4:	fab3 f383 	clz	r3, r3
 80016e8:	b2db      	uxtb	r3, r3
 80016ea:	4619      	mov	r1, r3
 80016ec:	687b      	ldr	r3, [r7, #4]
 80016ee:	408b      	lsls	r3, r1
 80016f0:	431a      	orrs	r2, r3
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	60da      	str	r2, [r3, #12]
 80016f6:	bf00      	nop
 80016f8:	371c      	adds	r7, #28
 80016fa:	46bd      	mov	sp, r7
 80016fc:	bc80      	pop	{r7}
 80016fe:	4770      	bx	lr

08001700 <LL_GPIO_Init>:
 8001700:	b580      	push	{r7, lr}
 8001702:	b088      	sub	sp, #32
 8001704:	af00      	add	r7, sp, #0
 8001706:	6078      	str	r0, [r7, #4]
 8001708:	6039      	str	r1, [r7, #0]
 800170a:	683b      	ldr	r3, [r7, #0]
 800170c:	681b      	ldr	r3, [r3, #0]
 800170e:	021b      	lsls	r3, r3, #8
 8001710:	0c1b      	lsrs	r3, r3, #16
 8001712:	617b      	str	r3, [r7, #20]
 8001714:	697b      	ldr	r3, [r7, #20]
 8001716:	613b      	str	r3, [r7, #16]
 8001718:	693b      	ldr	r3, [r7, #16]
 800171a:	fa93 f3a3 	rbit	r3, r3
 800171e:	60fb      	str	r3, [r7, #12]
 8001720:	68fb      	ldr	r3, [r7, #12]
 8001722:	fab3 f383 	clz	r3, r3
 8001726:	b2db      	uxtb	r3, r3
 8001728:	61fb      	str	r3, [r7, #28]
 800172a:	e040      	b.n	80017ae <LL_GPIO_Init+0xae>
 800172c:	2201      	movs	r2, #1
 800172e:	69fb      	ldr	r3, [r7, #28]
 8001730:	409a      	lsls	r2, r3
 8001732:	697b      	ldr	r3, [r7, #20]
 8001734:	4013      	ands	r3, r2
 8001736:	2b00      	cmp	r3, #0
 8001738:	d036      	beq.n	80017a8 <LL_GPIO_Init+0xa8>
 800173a:	69fb      	ldr	r3, [r7, #28]
 800173c:	2b07      	cmp	r3, #7
 800173e:	d806      	bhi.n	800174e <LL_GPIO_Init+0x4e>
 8001740:	f240 1201 	movw	r2, #257	; 0x101
 8001744:	69fb      	ldr	r3, [r7, #28]
 8001746:	fa02 f303 	lsl.w	r3, r2, r3
 800174a:	61bb      	str	r3, [r7, #24]
 800174c:	e008      	b.n	8001760 <LL_GPIO_Init+0x60>
 800174e:	69fb      	ldr	r3, [r7, #28]
 8001750:	3b08      	subs	r3, #8
 8001752:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 8001756:	fa02 f303 	lsl.w	r3, r2, r3
 800175a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800175e:	61bb      	str	r3, [r7, #24]
 8001760:	683b      	ldr	r3, [r7, #0]
 8001762:	691b      	ldr	r3, [r3, #16]
 8001764:	461a      	mov	r2, r3
 8001766:	69b9      	ldr	r1, [r7, #24]
 8001768:	6878      	ldr	r0, [r7, #4]
 800176a:	f7ff ffa7 	bl	80016bc <LL_GPIO_SetPinPull>
 800176e:	683b      	ldr	r3, [r7, #0]
 8001770:	685b      	ldr	r3, [r3, #4]
 8001772:	461a      	mov	r2, r3
 8001774:	69b9      	ldr	r1, [r7, #24]
 8001776:	6878      	ldr	r0, [r7, #4]
 8001778:	f7ff ff0a 	bl	8001590 <LL_GPIO_SetPinMode>
 800177c:	683b      	ldr	r3, [r7, #0]
 800177e:	685b      	ldr	r3, [r3, #4]
 8001780:	2b01      	cmp	r3, #1
 8001782:	d003      	beq.n	800178c <LL_GPIO_Init+0x8c>
 8001784:	683b      	ldr	r3, [r7, #0]
 8001786:	685b      	ldr	r3, [r3, #4]
 8001788:	2b09      	cmp	r3, #9
 800178a:	d10d      	bne.n	80017a8 <LL_GPIO_Init+0xa8>
 800178c:	683b      	ldr	r3, [r7, #0]
 800178e:	689b      	ldr	r3, [r3, #8]
 8001790:	461a      	mov	r2, r3
 8001792:	69b9      	ldr	r1, [r7, #24]
 8001794:	6878      	ldr	r0, [r7, #4]
 8001796:	f7ff ff2d 	bl	80015f4 <LL_GPIO_SetPinSpeed>
 800179a:	683b      	ldr	r3, [r7, #0]
 800179c:	68db      	ldr	r3, [r3, #12]
 800179e:	461a      	mov	r2, r3
 80017a0:	69b9      	ldr	r1, [r7, #24]
 80017a2:	6878      	ldr	r0, [r7, #4]
 80017a4:	f7ff ff58 	bl	8001658 <LL_GPIO_SetPinOutputType>
 80017a8:	69fb      	ldr	r3, [r7, #28]
 80017aa:	3301      	adds	r3, #1
 80017ac:	61fb      	str	r3, [r7, #28]
 80017ae:	697a      	ldr	r2, [r7, #20]
 80017b0:	69fb      	ldr	r3, [r7, #28]
 80017b2:	fa22 f303 	lsr.w	r3, r2, r3
 80017b6:	2b00      	cmp	r3, #0
 80017b8:	d1b8      	bne.n	800172c <LL_GPIO_Init+0x2c>
 80017ba:	2300      	movs	r3, #0
 80017bc:	4618      	mov	r0, r3
 80017be:	3720      	adds	r7, #32
 80017c0:	46bd      	mov	sp, r7
 80017c2:	bd80      	pop	{r7, pc}

080017c4 <LL_TIM_SetPrescaler>:
 80017c4:	b480      	push	{r7}
 80017c6:	b083      	sub	sp, #12
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
 80017cc:	6039      	str	r1, [r7, #0]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	683a      	ldr	r2, [r7, #0]
 80017d2:	629a      	str	r2, [r3, #40]	; 0x28
 80017d4:	bf00      	nop
 80017d6:	370c      	adds	r7, #12
 80017d8:	46bd      	mov	sp, r7
 80017da:	bc80      	pop	{r7}
 80017dc:	4770      	bx	lr

080017de <LL_TIM_SetAutoReload>:
 80017de:	b480      	push	{r7}
 80017e0:	b083      	sub	sp, #12
 80017e2:	af00      	add	r7, sp, #0
 80017e4:	6078      	str	r0, [r7, #4]
 80017e6:	6039      	str	r1, [r7, #0]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	683a      	ldr	r2, [r7, #0]
 80017ec:	62da      	str	r2, [r3, #44]	; 0x2c
 80017ee:	bf00      	nop
 80017f0:	370c      	adds	r7, #12
 80017f2:	46bd      	mov	sp, r7
 80017f4:	bc80      	pop	{r7}
 80017f6:	4770      	bx	lr

080017f8 <LL_TIM_SetRepetitionCounter>:
 80017f8:	b480      	push	{r7}
 80017fa:	b083      	sub	sp, #12
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	6078      	str	r0, [r7, #4]
 8001800:	6039      	str	r1, [r7, #0]
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	683a      	ldr	r2, [r7, #0]
 8001806:	631a      	str	r2, [r3, #48]	; 0x30
 8001808:	bf00      	nop
 800180a:	370c      	adds	r7, #12
 800180c:	46bd      	mov	sp, r7
 800180e:	bc80      	pop	{r7}
 8001810:	4770      	bx	lr

08001812 <LL_TIM_GenerateEvent_UPDATE>:
 8001812:	b480      	push	{r7}
 8001814:	b083      	sub	sp, #12
 8001816:	af00      	add	r7, sp, #0
 8001818:	6078      	str	r0, [r7, #4]
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	695b      	ldr	r3, [r3, #20]
 800181e:	f043 0201 	orr.w	r2, r3, #1
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	615a      	str	r2, [r3, #20]
 8001826:	bf00      	nop
 8001828:	370c      	adds	r7, #12
 800182a:	46bd      	mov	sp, r7
 800182c:	bc80      	pop	{r7}
 800182e:	4770      	bx	lr

08001830 <LL_TIM_Init>:
 8001830:	b580      	push	{r7, lr}
 8001832:	b084      	sub	sp, #16
 8001834:	af00      	add	r7, sp, #0
 8001836:	6078      	str	r0, [r7, #4]
 8001838:	6039      	str	r1, [r7, #0]
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	681b      	ldr	r3, [r3, #0]
 800183e:	60fb      	str	r3, [r7, #12]
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	4a27      	ldr	r2, [pc, #156]	; (80018e0 <LL_TIM_Init+0xb0>)
 8001844:	4293      	cmp	r3, r2
 8001846:	d00b      	beq.n	8001860 <LL_TIM_Init+0x30>
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800184e:	d007      	beq.n	8001860 <LL_TIM_Init+0x30>
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	4a24      	ldr	r2, [pc, #144]	; (80018e4 <LL_TIM_Init+0xb4>)
 8001854:	4293      	cmp	r3, r2
 8001856:	d003      	beq.n	8001860 <LL_TIM_Init+0x30>
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	4a23      	ldr	r2, [pc, #140]	; (80018e8 <LL_TIM_Init+0xb8>)
 800185c:	4293      	cmp	r3, r2
 800185e:	d106      	bne.n	800186e <LL_TIM_Init+0x3e>
 8001860:	68fb      	ldr	r3, [r7, #12]
 8001862:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8001866:	683b      	ldr	r3, [r7, #0]
 8001868:	685b      	ldr	r3, [r3, #4]
 800186a:	4313      	orrs	r3, r2
 800186c:	60fb      	str	r3, [r7, #12]
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	4a1b      	ldr	r2, [pc, #108]	; (80018e0 <LL_TIM_Init+0xb0>)
 8001872:	4293      	cmp	r3, r2
 8001874:	d00b      	beq.n	800188e <LL_TIM_Init+0x5e>
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800187c:	d007      	beq.n	800188e <LL_TIM_Init+0x5e>
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	4a18      	ldr	r2, [pc, #96]	; (80018e4 <LL_TIM_Init+0xb4>)
 8001882:	4293      	cmp	r3, r2
 8001884:	d003      	beq.n	800188e <LL_TIM_Init+0x5e>
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	4a17      	ldr	r2, [pc, #92]	; (80018e8 <LL_TIM_Init+0xb8>)
 800188a:	4293      	cmp	r3, r2
 800188c:	d106      	bne.n	800189c <LL_TIM_Init+0x6c>
 800188e:	68fb      	ldr	r3, [r7, #12]
 8001890:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8001894:	683b      	ldr	r3, [r7, #0]
 8001896:	68db      	ldr	r3, [r3, #12]
 8001898:	4313      	orrs	r3, r2
 800189a:	60fb      	str	r3, [r7, #12]
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	68fa      	ldr	r2, [r7, #12]
 80018a0:	601a      	str	r2, [r3, #0]
 80018a2:	683b      	ldr	r3, [r7, #0]
 80018a4:	689b      	ldr	r3, [r3, #8]
 80018a6:	4619      	mov	r1, r3
 80018a8:	6878      	ldr	r0, [r7, #4]
 80018aa:	f7ff ff98 	bl	80017de <LL_TIM_SetAutoReload>
 80018ae:	683b      	ldr	r3, [r7, #0]
 80018b0:	881b      	ldrh	r3, [r3, #0]
 80018b2:	4619      	mov	r1, r3
 80018b4:	6878      	ldr	r0, [r7, #4]
 80018b6:	f7ff ff85 	bl	80017c4 <LL_TIM_SetPrescaler>
 80018ba:	687b      	ldr	r3, [r7, #4]
 80018bc:	4a08      	ldr	r2, [pc, #32]	; (80018e0 <LL_TIM_Init+0xb0>)
 80018be:	4293      	cmp	r3, r2
 80018c0:	d105      	bne.n	80018ce <LL_TIM_Init+0x9e>
 80018c2:	683b      	ldr	r3, [r7, #0]
 80018c4:	691b      	ldr	r3, [r3, #16]
 80018c6:	4619      	mov	r1, r3
 80018c8:	6878      	ldr	r0, [r7, #4]
 80018ca:	f7ff ff95 	bl	80017f8 <LL_TIM_SetRepetitionCounter>
 80018ce:	6878      	ldr	r0, [r7, #4]
 80018d0:	f7ff ff9f 	bl	8001812 <LL_TIM_GenerateEvent_UPDATE>
 80018d4:	2300      	movs	r3, #0
 80018d6:	4618      	mov	r0, r3
 80018d8:	3710      	adds	r7, #16
 80018da:	46bd      	mov	sp, r7
 80018dc:	bd80      	pop	{r7, pc}
 80018de:	bf00      	nop
 80018e0:	40012c00 	.word	0x40012c00
 80018e4:	40000400 	.word	0x40000400
 80018e8:	40000800 	.word	0x40000800

080018ec <LL_InitTick>:
 80018ec:	b480      	push	{r7}
 80018ee:	b083      	sub	sp, #12
 80018f0:	af00      	add	r7, sp, #0
 80018f2:	6078      	str	r0, [r7, #4]
 80018f4:	6039      	str	r1, [r7, #0]
 80018f6:	687a      	ldr	r2, [r7, #4]
 80018f8:	683b      	ldr	r3, [r7, #0]
 80018fa:	fbb2 f3f3 	udiv	r3, r2, r3
 80018fe:	4a07      	ldr	r2, [pc, #28]	; (800191c <LL_InitTick+0x30>)
 8001900:	3b01      	subs	r3, #1
 8001902:	6053      	str	r3, [r2, #4]
 8001904:	4b05      	ldr	r3, [pc, #20]	; (800191c <LL_InitTick+0x30>)
 8001906:	2200      	movs	r2, #0
 8001908:	609a      	str	r2, [r3, #8]
 800190a:	4b04      	ldr	r3, [pc, #16]	; (800191c <LL_InitTick+0x30>)
 800190c:	2205      	movs	r2, #5
 800190e:	601a      	str	r2, [r3, #0]
 8001910:	bf00      	nop
 8001912:	370c      	adds	r7, #12
 8001914:	46bd      	mov	sp, r7
 8001916:	bc80      	pop	{r7}
 8001918:	4770      	bx	lr
 800191a:	bf00      	nop
 800191c:	e000e010 	.word	0xe000e010

08001920 <LL_Init1msTick>:
 8001920:	b580      	push	{r7, lr}
 8001922:	b082      	sub	sp, #8
 8001924:	af00      	add	r7, sp, #0
 8001926:	6078      	str	r0, [r7, #4]
 8001928:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800192c:	6878      	ldr	r0, [r7, #4]
 800192e:	f7ff ffdd 	bl	80018ec <LL_InitTick>
 8001932:	bf00      	nop
 8001934:	3708      	adds	r7, #8
 8001936:	46bd      	mov	sp, r7
 8001938:	bd80      	pop	{r7, pc}
	...

0800193c <LL_mDelay>:
 800193c:	b480      	push	{r7}
 800193e:	b085      	sub	sp, #20
 8001940:	af00      	add	r7, sp, #0
 8001942:	6078      	str	r0, [r7, #4]
 8001944:	4b0e      	ldr	r3, [pc, #56]	; (8001980 <LL_mDelay+0x44>)
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	60fb      	str	r3, [r7, #12]
 800194a:	68fb      	ldr	r3, [r7, #12]
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001952:	d00c      	beq.n	800196e <LL_mDelay+0x32>
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	3301      	adds	r3, #1
 8001958:	607b      	str	r3, [r7, #4]
 800195a:	e008      	b.n	800196e <LL_mDelay+0x32>
 800195c:	4b08      	ldr	r3, [pc, #32]	; (8001980 <LL_mDelay+0x44>)
 800195e:	681b      	ldr	r3, [r3, #0]
 8001960:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001964:	2b00      	cmp	r3, #0
 8001966:	d002      	beq.n	800196e <LL_mDelay+0x32>
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	3b01      	subs	r3, #1
 800196c:	607b      	str	r3, [r7, #4]
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	2b00      	cmp	r3, #0
 8001972:	d1f3      	bne.n	800195c <LL_mDelay+0x20>
 8001974:	bf00      	nop
 8001976:	3714      	adds	r7, #20
 8001978:	46bd      	mov	sp, r7
 800197a:	bc80      	pop	{r7}
 800197c:	4770      	bx	lr
 800197e:	bf00      	nop
 8001980:	e000e010 	.word	0xe000e010

08001984 <LL_SetSystemCoreClock>:
 8001984:	b480      	push	{r7}
 8001986:	b083      	sub	sp, #12
 8001988:	af00      	add	r7, sp, #0
 800198a:	6078      	str	r0, [r7, #4]
 800198c:	4a03      	ldr	r2, [pc, #12]	; (800199c <LL_SetSystemCoreClock+0x18>)
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	6013      	str	r3, [r2, #0]
 8001992:	bf00      	nop
 8001994:	370c      	adds	r7, #12
 8001996:	46bd      	mov	sp, r7
 8001998:	bc80      	pop	{r7}
 800199a:	4770      	bx	lr
 800199c:	20000000 	.word	0x20000000

080019a0 <__libc_init_array>:
 80019a0:	b570      	push	{r4, r5, r6, lr}
 80019a2:	2500      	movs	r5, #0
 80019a4:	4e0c      	ldr	r6, [pc, #48]	; (80019d8 <__libc_init_array+0x38>)
 80019a6:	4c0d      	ldr	r4, [pc, #52]	; (80019dc <__libc_init_array+0x3c>)
 80019a8:	1ba4      	subs	r4, r4, r6
 80019aa:	10a4      	asrs	r4, r4, #2
 80019ac:	42a5      	cmp	r5, r4
 80019ae:	d109      	bne.n	80019c4 <__libc_init_array+0x24>
 80019b0:	f000 f81a 	bl	80019e8 <_init>
 80019b4:	2500      	movs	r5, #0
 80019b6:	4e0a      	ldr	r6, [pc, #40]	; (80019e0 <__libc_init_array+0x40>)
 80019b8:	4c0a      	ldr	r4, [pc, #40]	; (80019e4 <__libc_init_array+0x44>)
 80019ba:	1ba4      	subs	r4, r4, r6
 80019bc:	10a4      	asrs	r4, r4, #2
 80019be:	42a5      	cmp	r5, r4
 80019c0:	d105      	bne.n	80019ce <__libc_init_array+0x2e>
 80019c2:	bd70      	pop	{r4, r5, r6, pc}
 80019c4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019c8:	4798      	blx	r3
 80019ca:	3501      	adds	r5, #1
 80019cc:	e7ee      	b.n	80019ac <__libc_init_array+0xc>
 80019ce:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019d2:	4798      	blx	r3
 80019d4:	3501      	adds	r5, #1
 80019d6:	e7f2      	b.n	80019be <__libc_init_array+0x1e>
 80019d8:	08001a00 	.word	0x08001a00
 80019dc:	08001a00 	.word	0x08001a00
 80019e0:	08001a00 	.word	0x08001a00
 80019e4:	08001a04 	.word	0x08001a04

080019e8 <_init>:
 80019e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019ea:	bf00      	nop
 80019ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019ee:	bc08      	pop	{r3}
 80019f0:	469e      	mov	lr, r3
 80019f2:	4770      	bx	lr

080019f4 <_fini>:
 80019f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019f6:	bf00      	nop
 80019f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019fa:	bc08      	pop	{r3}
 80019fc:	469e      	mov	lr, r3
 80019fe:	4770      	bx	lr
